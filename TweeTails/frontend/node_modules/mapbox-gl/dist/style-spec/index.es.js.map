{"version":3,"file":"index.es.js","sources":["../../../node_modules/json-stringify-pretty-compact/index.js","../format.js","../visit.js","../migrate/v8.js","../util/extend.js","../expression/parsing_error.js","../expression/scope.js","../expression/types.js","../../../node_modules/csscolorparser/csscolorparser.js","../util/color.js","../expression/types/collator.js","../expression/types/formatted.js","../expression/types/resolved_image.js","../expression/values.js","../expression/definitions/literal.js","../expression/runtime_error.js","../expression/definitions/assertion.js","../expression/definitions/format.js","../expression/definitions/image.js","../util/get_type.js","../expression/definitions/coercion.js","../expression/evaluation_context.js","../expression/compound_expression.js","../expression/definitions/collator.js","../../../node_modules/quickselect/index.js","../util/geometry_util.js","../expression/definitions/within.js","../../../node_modules/cheap-ruler/index.js","../../../node_modules/@mapbox/point-geometry/index.js","../../../node_modules/tinyqueue/index.js","../data/extent.js","../expression/definitions/distance.js","../expression/is_constant.js","../expression/definitions/var.js","../expression/parsing_context.js","../expression/stops.js","../expression/definitions/step.js","../../../node_modules/@mapbox/unitbezier/index.js","../util/interpolate.js","../util/color_spaces.js","../expression/definitions/interpolate.js","../expression/definitions/coalesce.js","../expression/definitions/let.js","../expression/definitions/at.js","../expression/definitions/in.js","../expression/definitions/index_of.js","../expression/definitions/match.js","../expression/definitions/case.js","../expression/definitions/slice.js","../expression/definitions/comparison.js","../expression/definitions/number_format.js","../expression/definitions/length.js","../util/random.js","../expression/definitions/index.js","../util/result.js","../util/properties.js","../function/index.js","../expression/index.js","../function/convert.js","../util/unbundle_jsonlint.js","../feature_filter/index.js","../feature_filter/convert.js","../migrate/expressions.js","../migrate.js","../composite.js","../util/ref_properties.js","../deref.js","../util/deep_equal.js","../diff.js","../error/validation_error.js","../error/parsing_error.js","../validate/validate_object.js","../validate/validate_import.js","../validate/validate_array.js","../validate/validate_number.js","../validate/validate_function.js","../validate/validate_expression.js","../validate/validate_boolean.js","../validate/validate_color.js","../validate/validate_enum.js","../validate/validate_filter.js","../validate/validate_property.js","../validate/validate_paint_property.js","../validate/validate_layout_property.js","../validate/validate_layer.js","../validate/validate_string.js","../validate/validate_source.js","../validate/validate_model.js","../validate/validate_light.js","../validate/validate_lights.js","../validate/validate_terrain.js","../validate/validate_fog.js","../validate/validate_formatted.js","../validate/validate_image.js","../validate/validate_projection.js","../validate/validate.js","../validate/validate_glyphs_url.js","../validate/validate_style.js","../validate_style.min.js","../../../node_modules/@mapbox/jsonlint-lines-primitives/lib/jsonlint.js","../read_style.js","../validate_style.js","../validate_mapbox_api_supported.js","../style-spec.js"],"sourcesContent":["// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nconst stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nexport default function stringify(passedObj, options = {}) {\n  const indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n\n  const maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n\n  let { replacer } = options;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    const string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    const length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      const prettified = string.replace(\n        stringOrChar,\n        (match, stringLiteral) => {\n          return stringLiteral || `${match} `;\n        }\n      );\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      const nextIndent = currentIndent + indent;\n      const items = [];\n      let index = 0;\n      let start;\n      let end;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        const { length } = obj;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        const keys = Object.keys(obj);\n        const { length } = keys;\n        for (; index < length; index++) {\n          const key = keys[index];\n          const keyPart = `${JSON.stringify(key)}: `;\n          const value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(`,\\n${nextIndent}`), end].join(\n          `\\n${currentIndent}`\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n}\n","// @noflow\n\nimport reference from './reference/latest.js';\nimport stringifyPretty from 'json-stringify-pretty-compact';\n\nfunction sortKeysBy(obj, reference) {\n    const result = {};\n    for (const key in reference) {\n        if (obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n\n/**\n * Format a Mapbox GL Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a Mapbox GL Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('mapbox-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, reference.$root);\n\n    if (style.layers) {\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, reference.layer));\n    }\n\n    return stringifyPretty(style, {indent: space});\n}\n\nexport default format;\n","// @flow\n\nimport Reference from './reference/v8.json';\nimport type {StylePropertySpecification} from './style-spec.js';\nimport type {\n    StyleSpecification,\n    SourceSpecification,\n    LayerSpecification,\n    PropertyValueSpecification,\n    DataDrivenPropertyValueSpecification\n} from './types.js';\n\nfunction getPropertyReference(propertyName: string): StylePropertySpecification {\n    for (let i = 0; i < Reference.layout.length; i++) {\n        for (const key in Reference[Reference.layout[i]]) {\n            if (key === propertyName) return (Reference[Reference.layout[i]][key]: any);\n        }\n    }\n    for (let i = 0; i < Reference.paint.length; i++) {\n        for (const key in Reference[Reference.paint[i]]) {\n            if (key === propertyName) return (Reference[Reference.paint[i]][key]: any);\n        }\n    }\n\n    return (null: any);\n}\n\nexport function eachSource(style: StyleSpecification, callback: (_: SourceSpecification) => void) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\n\nexport function eachLayer(style: StyleSpecification, callback: (_: LayerSpecification) => void) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\n\ntype PropertyCallback = ({\n    path: [string, 'paint' | 'layout', string], // [layerid, paint/layout, property key]\n    key: string,\n    value: PropertyValueSpecification<mixed> | DataDrivenPropertyValueSpecification<mixed>,\n    reference: StylePropertySpecification,\n    set: (PropertyValueSpecification<mixed> | DataDrivenPropertyValueSpecification<mixed>) => void\n}) => void;\n\nexport function eachProperty(\n    style: StyleSpecification,\n    options: {paint?: boolean, layout?: boolean},\n    callback: PropertyCallback\n) {\n    function inner(layer: LayerSpecification, propertyType: 'paint' | 'layout') {\n        if (layer.type === 'slot') return;\n        const properties = (layer[propertyType]: any);\n        if (!properties) return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n","// @noflow\nimport {eachSource, eachLayer, eachProperty} from '../visit.js';\n\nfunction eachLayout(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\n\nfunction eachPaint(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\n\nfunction resolveConstant(style, value) {\n    if (typeof value === 'string' && value[0] === '@') {\n        return resolveConstant(style, style.constants[value]);\n    } else {\n        return value;\n    }\n}\n\nfunction isFunction(value) {\n    return Array.isArray(value.stops);\n}\n\nfunction renameProperty(obj, from, to) {\n    obj[to] = obj[from]; delete obj[from];\n}\n\nexport default function(style) {\n    style.version = 8;\n\n    // Rename properties, reverse coordinates in source and layers\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source.url !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n\n        eachPaint(layer, (paint) => {\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n\n    // Inline Constants\n    eachProperty(style, {paint: true, layout: true}, (property) => {\n        const value = resolveConstant(style, property.value);\n\n        if (isFunction(value)) {\n            value.stops.forEach((stop) => {\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n\n        property.set(value);\n    });\n    delete style.constants;\n\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n\n        eachLayout(layer, (layout) => {\n            delete layout['text-max-size'];\n            delete layout['icon-max-size'];\n        });\n\n        eachPaint(layer, (paint) => {\n            if (paint['text-size']) {\n                if (!layer.layout) layer.layout = {};\n                layer.layout['text-size'] = paint['text-size'];\n                delete paint['text-size'];\n            }\n\n            if (paint['icon-size']) {\n                if (!layer.layout) layer.layout = {};\n                layer.layout['icon-size'] = paint['icon-size'];\n                delete paint['icon-size'];\n            }\n        });\n    });\n\n    function migrateFontstackURL(input) {\n        const inputParsed = new URL(input);\n        const inputPathnameParts = inputParsed.pathname.split('/');\n\n        if (inputParsed.protocol !== 'mapbox:') {\n            return input;\n\n        } else if (inputParsed.hostname === 'fontstack') {\n            assert(decodeURI(inputParsed.pathname) === '/{fontstack}/{range}.pbf');\n            return 'mapbox://fonts/mapbox/{fontstack}/{range}.pbf';\n\n        } else if (inputParsed.hostname === 'fonts') {\n            assert(inputPathnameParts[1] === 'v1');\n            assert(decodeURI(inputPathnameParts[3]) === '{fontstack}');\n            assert(decodeURI(inputPathnameParts[4]) === '{range}.pbf');\n            return `mapbox://fonts/${inputPathnameParts[2]}/{fontstack}/{range}.pbf`;\n\n        } else {\n            assert(false);\n        }\n\n        function assert(predicate) {\n            if (!predicate) {\n                throw new Error(`Invalid font url: \"${input}\"`);\n            }\n        }\n    }\n\n    if (style.glyphs) {\n        style.glyphs = migrateFontstackURL(style.glyphs);\n    }\n\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            return string.split(',').map((s) => {\n                return s.trim();\n            });\n        }\n\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            return font;\n\n        } else if (typeof font === 'string') {\n            return splitAndTrim(font);\n\n        } else if (typeof font === 'object') {\n            font.stops.forEach((stop) => {\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            return font;\n\n        } else {\n            throw new Error(\"unexpected font value\");\n        }\n    }\n\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['text-font']) {\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n\n    let firstSymbolLayer = 0;\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        const layer = style.layers[i];\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    symbolLayers.reverse();\n    style.layers = style.layers.concat(symbolLayers);\n\n    return style;\n}\n","// @flow\n\nexport default function (output: any, ...inputs: Array<any>): any {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n","// @flow\n\nclass ParsingError extends Error {\n    key: string;\n    message: string;\n    constructor(key: string, message: string) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","// @flow\n\nimport type {Expression} from './expression.js';\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    parent: ?Scope;\n    bindings: {[_: string]: Expression};\n    constructor(parent?: Scope, bindings: Array<[string, Expression]> = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings: Array<[string, Expression]>): Scope {\n        return new Scope(this, bindings);\n    }\n\n    get(name: string): Expression {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name: string): boolean {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","// @flow\n\nexport type NullTypeT = { kind: 'null' };\nexport type NumberTypeT = { kind: 'number' };\nexport type StringTypeT = { kind: 'string' };\nexport type BooleanTypeT = { kind: 'boolean' };\nexport type ColorTypeT = { kind: 'color' };\nexport type ObjectTypeT = { kind: 'object' };\nexport type ValueTypeT = { kind: 'value' };\nexport type ErrorTypeT = { kind: 'error' };\nexport type CollatorTypeT = { kind: 'collator' };\nexport type FormattedTypeT = { kind: 'formatted' };\nexport type ResolvedImageTypeT = { kind: 'resolvedImage' };\n\nexport type EvaluationKind = 'constant' | 'source' | 'camera' | 'composite';\n\nexport type Type =\n    NullTypeT |\n    NumberTypeT |\n    StringTypeT |\n    BooleanTypeT |\n    ColorTypeT |\n    ObjectTypeT |\n    ValueTypeT |\n    ArrayType | // eslint-disable-line no-use-before-define\n    ErrorTypeT |\n    CollatorTypeT |\n    FormattedTypeT |\n    ResolvedImageTypeT |\n    ArrayType;\n\nexport type ArrayType = {\n    kind: 'array',\n    itemType: Type,\n    N: ?number\n}\n\nexport type NativeType = 'number' | 'string' | 'boolean' | 'null' | 'array' | 'object'\n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType: Type, N: ?number): ArrayType {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type: Type): string {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected: Type, t: Type): ?string {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided: Type, allowedTypes: Array<Type>): boolean {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided: any, allowedTypes: Array<NativeType>): boolean {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","// @flow\n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n\n    constructor(r: number, g: number, b: number, a: number = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    static black: Color;\n    static white: Color;\n    static transparent: Color;\n    static red: Color;\n    static blue: Color;\n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input?: string | Color | null): Color | void {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString(): string {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGB array of values representing the color, unpremultiplied by A and multiplied by a scalar.\n     *\n     * @param {number} scale A scale to apply to the unpremultiplied-alpha values.\n     * @returns An array of RGB color values in the range [0, 1].\n     */\n    toArray01Scaled(scale: number): [number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0] : [\n            (r / a) * scale,\n            (g / a) * scale,\n            (b / a) * scale\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A, and converted to linear color space.\n     * The color is defined by sRGB primaries, but the sRGB transfer function is reversed to obtain linear energy.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01Linear(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            Math.pow((r / a), 2.2),\n            Math.pow((g / a), 2.2),\n            Math.pow((b / a), 2.2),\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n","// @flow\n\nexport default class Collator {\n    locale: string | null;\n    sensitivity: 'base' | 'accent' | 'case' | 'variant';\n    collator: Intl$Collator;\n\n    constructor(caseSensitive: boolean, diacriticSensitive: boolean, locale: string | null) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs: string, rhs: string): number {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale(): string {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","// @flow\nimport type Color from '../../util/color.js';\nimport type ResolvedImage from '../types/resolved_image.js';\n\nexport class FormattedSection {\n    text: string;\n    image: ResolvedImage | null;\n    scale: number | null;\n    fontStack: string | null;\n    textColor: Color | null;\n\n    constructor(text: string, image: ResolvedImage | null, scale: number | null, fontStack: string | null, textColor: Color | null) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n    sections: Array<FormattedSection>;\n\n    constructor(sections: Array<FormattedSection>) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted: string): Formatted {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty(): boolean {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.namePrimary.length !== 0));\n    }\n\n    static factory(text: Formatted | string): Formatted {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString(): string {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize(): Array<mixed> {\n        const serialized: Array<mixed> = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.namePrimary]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options: { [key: string]: mixed } = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]: Array<mixed>).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","// @flow\n\nexport type ResolvedImageOptions = {\n    namePrimary: string,\n    nameSecondary: ?string,\n    available: boolean\n};\n\nexport default class ResolvedImage {\n    namePrimary: string;\n    nameSecondary: ?string;\n    available: boolean;\n\n    constructor(options: ResolvedImageOptions) {\n        this.namePrimary = options.namePrimary;\n        if (options.nameSecondary) {\n            this.nameSecondary = options.nameSecondary;\n        }\n        this.available = options.available;\n    }\n\n    toString(): string {\n        if (this.nameSecondary) {\n            return `[${this.namePrimary},${this.nameSecondary}]`;\n        }\n        return this.namePrimary;\n    }\n\n    static fromString(namePrimary: string, nameSecondary: ?string): ResolvedImage | null {\n        if (!namePrimary) return null; // treat empty values as no image\n        return new ResolvedImage({namePrimary, nameSecondary, available: false});\n    }\n\n    serialize(): Array<string> {\n        if (this.nameSecondary) {\n            return [\"image\", this.namePrimary, this.nameSecondary];\n        }\n        return [\"image\", this.namePrimary];\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\nimport type {Type} from './types.js';\n\nexport function validateRGBA(r: mixed, g: mixed, b: mixed, a?: mixed): string | null {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\nexport function validateHSLA(h: mixed, s: mixed, l: mixed, a?: mixed): string | null {\n    if (!(\n        typeof h === 'number' && h >= 0 && h <= 360\n    )) {\n        const value = typeof a === 'number' ? [h, s, l, a] : [h, s, l];\n        return `Invalid hsla value [${value.join(', ')}]: 'h' must be between 0 and 360.`;\n    }\n\n    if (!(\n        typeof s === 'number' && s >= 0 && s <= 100 &&\n        typeof l === 'number' && l >= 0 && l <= 100\n    )) {\n        const value = typeof a === 'number' ? [h, s, l, a] : [h, s, l];\n        return `Invalid hsla value [${value.join(', ')}]: 's', and 'l' must be between 0 and 100.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid hsla value [${[h, s, l, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\nexport type Value = null | string | boolean | number | Color | Collator | Formatted | ResolvedImage | $ReadOnlyArray<Value> | { +[string]: Value }\n\nexport function isValue(mixed: mixed): boolean {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value: Value): Type {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType: Type | typeof undefined;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value: Value): string {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","// @flow\n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\nimport type {Type} from '../types.js';\nimport type {Value}  from '../values.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\n\nclass Literal implements Expression {\n    type: Type;\n    value: Value;\n\n    constructor(type: Type, value: Value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): void | Literal {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]: any);\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate(): Value {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value: any);\n        }\n    }\n}\n\nexport default Literal;\n","// @flow\n\nclass RuntimeError {\n    name: string;\n    message: string;\n\n    constructor(message: string) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON(): string {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","// @flow\n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name: string = (args[0]: any);\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N: ?number;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = ((args[2]: any): number);\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext): any | null {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","// @flow\n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\nexport type FormattedSectionExpression = {\n    // Content of a section may be Image expression or other\n    // type of expression that is coercable to 'string'.\n    content: Expression,\n    scale: Expression | null;\n    font: Expression | null;\n    textColor: Expression | null;\n}\n\nexport default class FormatExpression implements Expression {\n    type: Type;\n    sections: Array<FormattedSectionExpression>;\n\n    constructor(sections: Array<FormattedSectionExpression>) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections: Array<FormattedSectionExpression> = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]: any);\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx: EvaluationContext): Formatted {\n        const evaluateSection = (section: FormattedSectionExpression) => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined(): boolean {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","// @flow\n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\nexport default class ImageExpression implements Expression {\n    type: Type;\n    inputPrimary: Expression;\n    inputSecondary: ?Expression;\n\n    constructor(inputPrimary: Expression, inputSecondary: ?Expression) {\n        this.type = ResolvedImageType;\n        this.inputPrimary = inputPrimary;\n        this.inputSecondary = inputSecondary;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2) {\n            return context.error(`Expected two or more arguments.`);\n        }\n\n        const namePrimary = context.parse(args[1], 1, StringType);\n        if (!namePrimary) return context.error(`No image name provided.`);\n\n        if (args.length === 2) {\n            return new ImageExpression(namePrimary);\n        }\n\n        const nameSecondary = context.parse(args[2], 1, StringType);\n        if (!nameSecondary) return context.error(`Secondary image variant is not a string.`);\n\n        return new ImageExpression(namePrimary, nameSecondary);\n    }\n\n    evaluate(ctx: EvaluationContext): null | ResolvedImage {\n        const value = ResolvedImage.fromString(this.inputPrimary.evaluate(ctx), this.inputSecondary ? this.inputSecondary.evaluate(ctx) : undefined);\n        if (value && ctx.availableImages) {\n            value.available = ctx.availableImages.indexOf(value.namePrimary) > -1;\n            // If there's a secondary variant, only mark it available if both are present\n            if (value.nameSecondary && value.available && ctx.availableImages) {\n                value.available = ctx.availableImages.indexOf(value.nameSecondary) > -1;\n            }\n        }\n\n        return value;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.inputPrimary);\n        if (this.inputSecondary) {\n            fn(this.inputSecondary);\n        }\n    }\n\n    outputDefined(): boolean {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.inputSecondary) {\n            // $FlowIgnore\n            return [\"image\", this.inputPrimary.serialize(), this.inputSecondary.serialize()];\n        }\n        return [\"image\", this.inputPrimary.serialize()];\n    }\n}\n","// @flow\n\nexport default function getType(val: mixed): string {\n    if (val instanceof Number) {\n        return 'number';\n    } else if (val instanceof String) {\n        return 'string';\n    } else if (val instanceof Boolean) {\n        return 'boolean';\n    } else if (Array.isArray(val)) {\n        return 'array';\n    } else if (val === null) {\n        return 'null';\n    } else {\n        return typeof val;\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType, array, NullType} from '../types.js';\nimport {Color, isValue, toString as valueToString, typeOf, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type, ArrayType} from '../types.js';\nimport getType from '../../util/get_type.js';\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion implements Expression {\n    type: Type | ArrayType;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name: string = (args[0]: any);\n        const parsed = [];\n        let type: Type | ArrayType = NullType;\n        if (name === 'to-array') {\n            if (!Array.isArray(args[1])) {\n                return null;\n            }\n            const arrayLength = args[1].length;\n            if (context.expectedType) {\n                if (context.expectedType.kind === 'array') {\n                    type = array(context.expectedType.itemType, arrayLength);\n                } else {\n                    return context.error(`Expected ${context.expectedType.kind} but found array.`);\n                }\n            } else if (arrayLength > 0 && isValue(args[1][0])) {\n                const value = (args[1][0]: any);\n                type = array(typeOf(value), arrayLength);\n            } else {\n                return null;\n            }\n            for (let i = 0; i < arrayLength; i++) {\n                // $FlowIgnore\n                const member = args[1][i];\n                let parsedMember;\n                if (getType(member) === 'array') {\n                    parsedMember = context.parse(member, undefined, type.itemType);\n                } else {\n                    const memberType = getType(member);\n                    if (memberType !== type.itemType.kind) {\n                        return context.error(`Expected ${type.itemType.kind} but found ${memberType}.`);\n                    }\n                    parsedMember = context.registry['literal'].parse(['literal', member === undefined ? null : member], context);\n                }\n                if (!parsedMember) return null;\n                parsed.push(parsedMember);\n            }\n        } else {\n            assert(types[name], name);\n\n            if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n                return context.error(`Expected one argument.`);\n\n            type = types[name];\n\n            for (let i = 1; i < args.length; i++) {\n                const input = context.parse(args[i], i, ValueType);\n                if (!input) return null;\n                parsed.push(input);\n            }\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]: any) / 255, (input[1]: any) / 255, (input[2]: any) / 255, (input[3]: any));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'array') {\n            return this.args.map(arg => { return arg.evaluate(ctx); });\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized: Array<mixed> = this.type.kind === 'array' ? [] : [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","// @flow\n\nimport {Color} from './values.js';\n\nimport type Point from '@mapbox/point-geometry';\nimport type {FormattedSection} from './types/formatted.js';\nimport type {GlobalProperties, Feature, FeatureState} from './index.js';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type {FeatureDistanceData} from '../feature_filter/index.js';\nimport type {ConfigOptions, ConfigOptionValue} from '../../style/properties.js';\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n    globals: GlobalProperties;\n    feature: ?Feature;\n    featureState: ?FeatureState;\n    formattedSection: ?FormattedSection;\n    availableImages: ?Array<string>;\n    canonical: null | CanonicalTileID;\n    featureTileCoord: ?Point;\n    featureDistanceData: ?FeatureDistanceData;\n    scope: ?string;\n    options: ?ConfigOptions;\n\n    _parseColorCache: {[_: string]: ?Color};\n\n    constructor(scope: ?string, options: ?ConfigOptions) {\n        this.globals = (null: any);\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n        this.scope = scope;\n        this.options = options;\n    }\n\n    id(): number | null {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n\n    geometryType(): null | string {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry(): ?Array<Array<Point>> {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID(): null | CanonicalTileID {\n        return this.canonical;\n    }\n\n    properties(): {[string]: any} {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    measureLight(_: string): number {\n        return this.globals.brightness || 0;\n    }\n\n    distanceFromCenter(): number {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input: string): ?Color {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n\n    getConfig(id: string): ?ConfigOptionValue {\n        return this.options ? this.options.get(id) : null;\n    }\n}\n\nexport default EvaluationContext;\n","// @flow\n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\nimport type {Expression, ExpressionRegistry} from './expression.js';\nimport type {Type} from './types.js';\nimport type {Value} from './values.js';\n\nexport type Varargs = {| type: Type |};\ntype Signature = Array<Type> | Varargs;\ntype Evaluate = (EvaluationContext, Array<Expression>) => Value;\ntype Definition = [Type, Signature, Evaluate] |\n    {|type: Type, overloads: Array<[Signature, Evaluate]>|};\n\nclass CompoundExpression implements Expression {\n    name: string;\n    type: Type;\n    _evaluate: Evaluate;\n    args: Array<Expression>;\n    _overloadIndex: number;\n\n    static definitions: {[_: string]: Definition };\n\n    constructor(name: string, type: Type, evaluate: Evaluate, args: Array<Expression>, overloadIndex: number) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n        this._overloadIndex = overloadIndex;\n    }\n\n    evaluate(ctx: EvaluationContext): Value {\n        if (!this._evaluate) { // restore evaluate function after transfer between threads\n            const definition = CompoundExpression.definitions[this.name];\n            this._evaluate = Array.isArray(definition) ? definition[2] : definition.overloads[this._overloadIndex][1];\n        }\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): Array<mixed> {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        const op: string = (args[0]: any);\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloadParams = [];\n\n        let signatureContext: ParsingContext = (null: any);\n\n        let overloadIndex = -1;\n\n        for (const [params, evaluate] of availableOverloads) {\n            if (Array.isArray(params) && params.length !== args.length - 1) continue; // param count doesn't match\n\n            overloadParams.push(params);\n            overloadIndex++;\n\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope, undefined, context._scope, context.options);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs: Array<Expression> = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs, overloadIndex);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloadParams.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloadParams.length ? overloadParams : availableOverloads.map(([params]) => params);\n            const signatures = expected.map(stringifySignature).join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry: ExpressionRegistry,\n        definitions: {[_: string]: Definition }\n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            // $FlowFixMe[method-unbinding]\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature: Signature): string {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","// @flow\n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\nexport default class CollatorExpression implements Expression {\n    type: Type;\n    caseSensitive: Expression;\n    diacriticSensitive: Expression;\n    locale: Expression | null;\n\n    constructor(caseSensitive: Expression, diacriticSensitive: Expression, locale: Expression | null) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx: EvaluationContext): Collator {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined(): boolean {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","// @flow\nimport type Point from '@mapbox/point-geometry';\nimport quickselect from 'quickselect';\n\ntype GeoJSONPosition = [number, number] | [number, number, number];\n\n// minX, minY, maxX, maxY\nexport type BBox = [number, number, number, number];\n\n/**\n * Returns the signed area for the polygon ring.  Postive areas are exterior rings and\n * have a clockwise winding.  Negative areas are interior rings and have a counter clockwise\n * ordering.\n */\nfunction calculateSignedArea(ring: Array<Point>): number {\n    let sum = 0;\n    for (let i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n\nfunction compareAreas(a: {area: number}, b: {area: number}) {\n    return b.area - a.area;\n}\n\n// classifies an array of rings into polygons with outer rings and holes\nexport function classifyRings(rings: Array<Array<Point>>, maxRings: number): Array<Array<Array<Point>>> {\n    const len = rings.length;\n\n    if (len <= 1) return [rings];\n\n    const polygons = [];\n    let polygon,\n        ccw;\n\n    for (let i = 0; i < len; i++) {\n        const area = calculateSignedArea(rings[i]);\n        if (area === 0) continue;\n\n        (rings[i]: any).area = Math.abs(area);\n\n        if (ccw === undefined) ccw = area < 0;\n\n        if (ccw === area < 0) {\n            if (polygon) polygons.push(polygon);\n            polygon = [rings[i]];\n\n        } else {\n            (polygon: any).push(rings[i]);\n        }\n    }\n    if (polygon) polygons.push(polygon);\n\n    // Earcut performance degrades with the # of rings in a polygon. For this\n    // reason, we limit strip out all but the `maxRings` largest rings.\n    if (maxRings > 1) {\n        for (let j = 0; j < polygons.length; j++) {\n            if (polygons[j].length <= maxRings) continue;\n            quickselect(polygons[j], maxRings, 1, polygons[j].length - 1, compareAreas);\n            polygons[j] = polygons[j].slice(0, maxRings);\n        }\n    }\n\n    return polygons;\n}\n\nexport function updateBBox(bbox: BBox, coord: GeoJSONPosition) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nexport function boxWithinBox(bbox1: BBox, bbox2: BBox): boolean {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction onBoundary(p: GeoJSONPosition, p1: GeoJSONPosition, p2: GeoJSONPosition) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p: GeoJSONPosition, p1: GeoJSONPosition, p2: GeoJSONPosition) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nexport function pointWithinPolygon(point: GeoJSONPosition, rings: Array<Array<GeoJSONPosition>>, trueOnBoundary: boolean = false): boolean {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length, k = len2 - 1; j < len2; k = j++) {\n            const q1 = ring[k];\n            const q2 = ring[j];\n            if (onBoundary(point, q1, q2)) return trueOnBoundary;\n            if (rayIntersect(point, q1, q2)) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction perp(v1: GeoJSONPosition, v2: GeoJSONPosition) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1: GeoJSONPosition, p2: GeoJSONPosition, q1: GeoJSONPosition, q2: GeoJSONPosition) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = x1 * y3 - x3 * y1;\n    const det2 = x2 * y3 - x3 * y2;\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nexport function segmentIntersectSegment(a: GeoJSONPosition, b: GeoJSONPosition, c: GeoJSONPosition, d: GeoJSONPosition): boolean {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\n","// @flow\n\nimport {isValue} from '../values.js';\nimport type {Type} from '../types.js';\nimport {BooleanType} from '../types.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type Point from '@mapbox/point-geometry';\nimport type {GeoJSON, GeoJSONPosition, GeoJSONPolygon, GeoJSONMultiPolygon} from '@mapbox/geojson-types';\nimport type {CanonicalTileID} from '../../../source/tile_id.js';\nimport {updateBBox, boxWithinBox, pointWithinPolygon, segmentIntersectSegment} from '../../util/geometry_util.js';\nimport type {BBox} from '../../util/geometry_util.js';\n\ntype GeoJSONPolygons =| GeoJSONPolygon | GeoJSONMultiPolygon;\n\nconst EXTENT = 8192;\n\nfunction mercatorXfromLng(lng: number) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat: number) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction getTileCoordinates(p: GeoJSONPosition, canonical: CanonicalTileID) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction pointWithinPolygons(point: GeoJSONPosition, polygons: Array<Array<Array<GeoJSONPosition>>>) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction lineIntersectPolygon(p1: GeoJSONPosition, p2: GeoJSONPosition, polygon: Array<Array<GeoJSONPosition>>) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n            const q1 = ring[k];\n            const q2 = ring[j];\n            if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line: Array<GeoJSONPosition>, polygon: Array<Array<GeoJSONPosition>>) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line: Array<GeoJSONPosition>, polygons: Array<Array<Array<GeoJSONPosition>>>) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates: Array<Array<GeoJSONPosition>>, bbox: BBox, canonical: CanonicalTileID) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates: Array<Array<Array<GeoJSONPosition>>>, bbox: BBox, canonical: CanonicalTileID) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p: GeoJSONPosition, bbox: BBox, polyBBox: Array<number>, worldSize: number) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox: BBox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry: ?Array<Array<Point>>, pointBBox: BBox, polyBBox: Array<number>, canonical: CanonicalTileID) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry: ?Array<Array<Point>>, lineBBox: BBox, polyBBox: Array<number>, canonical: CanonicalTileID) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines: Array<Array<GeoJSONPosition>> = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p: GeoJSONPosition = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within implements Expression {\n    type: Type;\n    geojson: GeoJSON\n    geometries: GeoJSONPolygons;\n\n    constructor(geojson: GeoJSON, geometries: GeoJSONPolygons) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Within {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]: Object);\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx: EvaluationContext): boolean {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n","'use strict'; /* @flow */\n\nconst factors = {\n    kilometers: 1,\n    miles: 1000 / 1609.344,\n    nauticalmiles: 1000 / 1852,\n    meters: 1000,\n    metres: 1000,\n    yards: 1000 / 0.9144,\n    feet: 1000 / 0.3048,\n    inches: 1000 / 0.0254\n};\n\n// Values that define WGS84 ellipsoid model of the Earth\nconst RE = 6378.137; // equatorial radius\nconst FE = 1 / 298.257223563; // flattening\n\nconst E2 = FE * (2 - FE);\nconst RAD = Math.PI / 180;\n\n/**\n * A collection of very fast approximations to common geodesic measurements. Useful for performance-sensitive code that measures things on a city scale.\n *\n * @param {number} lat latitude\n * @param {string} [units='kilometers']\n * @returns {CheapRuler}\n * @example\n * const ruler = cheapRuler(35.05, 'miles');\n * //=ruler\n */\nexport default class CheapRuler {\n    /**\n     * Creates a ruler object from tile coordinates (y and z).\n     *\n     * @param {number} y\n     * @param {number} z\n     * @param {string} [units='kilometers']\n     * @returns {CheapRuler}\n     * @example\n     * const ruler = cheapRuler.fromTile(1567, 12);\n     * //=ruler\n     */\n    static fromTile(y, z, units) {\n        const n = Math.PI * (1 - 2 * (y + 0.5) / Math.pow(2, z));\n        const lat = Math.atan(0.5 * (Math.exp(n) - Math.exp(-n))) / RAD;\n        return new CheapRuler(lat, units);\n    }\n\n    /**\n     * Multipliers for converting between units.\n     *\n     * @example\n     * // convert 50 meters to yards\n     * 50 * CheapRuler.units.yards / CheapRuler.units.meters;\n     */\n    static get units() {\n        return factors;\n    }\n\n    /**\n     * Creates a ruler instance for very fast approximations to common geodesic measurements around a certain latitude.\n     *\n     * @param {number} lat latitude\n     * @param {string} [units='kilometers']\n     * @returns {CheapRuler}\n     * @example\n     * const ruler = cheapRuler(35.05, 'miles');\n     * //=ruler\n     */\n    constructor(lat, units) {\n        if (lat === undefined) throw new Error('No latitude given.');\n        if (units && !factors[units]) throw new Error(`Unknown unit ${  units  }. Use one of: ${  Object.keys(factors).join(', ')}`);\n\n        // Curvature formulas from https://en.wikipedia.org/wiki/Earth_radius#Meridional\n        const m = RAD * RE * (units ? factors[units] : 1);\n        const coslat = Math.cos(lat * RAD);\n        const w2 = 1 / (1 - E2 * (1 - coslat * coslat));\n        const w = Math.sqrt(w2);\n\n        // multipliers for converting longitude and latitude degrees into distance\n        this.kx = m * w * coslat;        // based on normal radius of curvature\n        this.ky = m * w * w2 * (1 - E2); // based on meridonal radius of curvature\n    }\n\n    /**\n     * Given two points of the form [longitude, latitude], returns the distance.\n     *\n     * @param {Array<number>} a point [longitude, latitude]\n     * @param {Array<number>} b point [longitude, latitude]\n     * @returns {number} distance\n     * @example\n     * const distance = ruler.distance([30.5, 50.5], [30.51, 50.49]);\n     * //=distance\n     */\n    distance(a, b) {\n        const dx = wrap(a[0] - b[0]) * this.kx;\n        const dy = (a[1] - b[1]) * this.ky;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    /**\n     * Returns the bearing between two points in angles.\n     *\n     * @param {Array<number>} a point [longitude, latitude]\n     * @param {Array<number>} b point [longitude, latitude]\n     * @returns {number} bearing\n     * @example\n     * const bearing = ruler.bearing([30.5, 50.5], [30.51, 50.49]);\n     * //=bearing\n     */\n    bearing(a, b) {\n        const dx = wrap(b[0] - a[0]) * this.kx;\n        const dy = (b[1] - a[1]) * this.ky;\n        return Math.atan2(dx, dy) / RAD;\n    }\n\n    /**\n     * Returns a new point given distance and bearing from the starting point.\n     *\n     * @param {Array<number>} p point [longitude, latitude]\n     * @param {number} dist distance\n     * @param {number} bearing\n     * @returns {Array<number>} point [longitude, latitude]\n     * @example\n     * const point = ruler.destination([30.5, 50.5], 0.1, 90);\n     * //=point\n     */\n    destination(p, dist, bearing) {\n        const a = bearing * RAD;\n        return this.offset(p,\n            Math.sin(a) * dist,\n            Math.cos(a) * dist);\n    }\n\n    /**\n     * Returns a new point given easting and northing offsets (in ruler units) from the starting point.\n     *\n     * @param {Array<number>} p point [longitude, latitude]\n     * @param {number} dx easting\n     * @param {number} dy northing\n     * @returns {Array<number>} point [longitude, latitude]\n     * @example\n     * const point = ruler.offset([30.5, 50.5], 10, 10);\n     * //=point\n     */\n    offset(p, dx, dy) {\n        return [\n            p[0] + dx / this.kx,\n            p[1] + dy / this.ky\n        ];\n    }\n\n    /**\n     * Given a line (an array of points), returns the total line distance.\n     *\n     * @param {Array<Array<number>>} points [longitude, latitude]\n     * @returns {number} total line distance\n     * @example\n     * const length = ruler.lineDistance([\n     *     [-67.031, 50.458], [-67.031, 50.534],\n     *     [-66.929, 50.534], [-66.929, 50.458]\n     * ]);\n     * //=length\n     */\n    lineDistance(points) {\n        let total = 0;\n        for (let i = 0; i < points.length - 1; i++) {\n            total += this.distance(points[i], points[i + 1]);\n        }\n        return total;\n    }\n\n    /**\n     * Given a polygon (an array of rings, where each ring is an array of points), returns the area.\n     *\n     * @param {Array<Array<Array<number>>>} polygon\n     * @returns {number} area value in the specified units (square kilometers by default)\n     * @example\n     * const area = ruler.area([[\n     *     [-67.031, 50.458], [-67.031, 50.534], [-66.929, 50.534],\n     *     [-66.929, 50.458], [-67.031, 50.458]\n     * ]]);\n     * //=area\n     */\n    area(polygon) {\n        let sum = 0;\n\n        for (let i = 0; i < polygon.length; i++) {\n            const ring = polygon[i];\n\n            for (let j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n                sum += wrap(ring[j][0] - ring[k][0]) * (ring[j][1] + ring[k][1]) * (i ? -1 : 1);\n            }\n        }\n\n        return (Math.abs(sum) / 2) * this.kx * this.ky;\n    }\n\n    /**\n     * Returns the point at a specified distance along the line.\n     *\n     * @param {Array<Array<number>>} line\n     * @param {number} dist distance\n     * @returns {Array<number>} point [longitude, latitude]\n     * @example\n     * const point = ruler.along(line, 2.5);\n     * //=point\n     */\n    along(line, dist) {\n        let sum = 0;\n\n        if (dist <= 0) return line[0];\n\n        for (let i = 0; i < line.length - 1; i++) {\n            const p0 = line[i];\n            const p1 = line[i + 1];\n            const d = this.distance(p0, p1);\n            sum += d;\n            if (sum > dist) return interpolate(p0, p1, (dist - (sum - d)) / d);\n        }\n\n        return line[line.length - 1];\n    }\n\n    /**\n     * Returns the distance from a point `p` to a line segment `a` to `b`.\n     *\n     * @pointToSegmentDistance\n     * @param {Array<number>} p point [longitude, latitude]\n     * @param {Array<number>} p1 segment point 1 [longitude, latitude]\n     * @param {Array<number>} p2 segment point 2 [longitude, latitude]\n     * @returns {number} distance\n     * @example\n     * const distance = ruler.pointToSegmentDistance([-67.04, 50.5], [-67.05, 50.57], [-67.03, 50.54]);\n     * //=distance\n     */\n    pointToSegmentDistance(p, a, b) {\n        let [x, y] = a;\n        let dx = wrap(b[0] - x) * this.kx;\n        let dy = (b[1] - y) * this.ky;\n        let t = 0;\n\n        if (dx !== 0 || dy !== 0) {\n            t = (wrap(p[0] - x) * this.kx * dx + (p[1] - y) * this.ky * dy) / (dx * dx + dy * dy);\n\n            if (t > 1) {\n                x = b[0];\n                y = b[1];\n\n            } else if (t > 0) {\n                x += (dx / this.kx) * t;\n                y += (dy / this.ky) * t;\n            }\n        }\n\n        dx = wrap(p[0] - x) * this.kx;\n        dy = (p[1] - y) * this.ky;\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    /**\n     * Returns an object of the form {point, index, t}, where point is closest point on the line\n     * from the given point, index is the start index of the segment with the closest point,\n     * and t is a parameter from 0 to 1 that indicates where the closest point is on that segment.\n     *\n     * @param {Array<Array<number>>} line\n     * @param {Array<number>} p point [longitude, latitude]\n     * @returns {Object} {point, index, t}\n     * @example\n     * const point = ruler.pointOnLine(line, [-67.04, 50.5]).point;\n     * //=point\n     */\n    pointOnLine(line, p) {\n        let minDist = Infinity;\n        let minX, minY, minI, minT;\n\n        for (let i = 0; i < line.length - 1; i++) {\n\n            let x = line[i][0];\n            let y = line[i][1];\n            let dx = wrap(line[i + 1][0] - x) * this.kx;\n            let dy = (line[i + 1][1] - y) * this.ky;\n            let t = 0;\n\n            if (dx !== 0 || dy !== 0) {\n                t = (wrap(p[0] - x) * this.kx * dx + (p[1] - y) * this.ky * dy) / (dx * dx + dy * dy);\n\n                if (t > 1) {\n                    x = line[i + 1][0];\n                    y = line[i + 1][1];\n\n                } else if (t > 0) {\n                    x += (dx / this.kx) * t;\n                    y += (dy / this.ky) * t;\n                }\n            }\n\n            dx = wrap(p[0] - x) * this.kx;\n            dy = (p[1] - y) * this.ky;\n\n            const sqDist = dx * dx + dy * dy;\n            if (sqDist < minDist) {\n                minDist = sqDist;\n                minX = x;\n                minY = y;\n                minI = i;\n                minT = t;\n            }\n        }\n\n        return {\n            point: [minX, minY],\n            index: minI,\n            t: Math.max(0, Math.min(1, minT))\n        };\n    }\n\n    /**\n     * Returns a part of the given line between the start and the stop points (or their closest points on the line).\n     *\n     * @param {Array<number>} start point [longitude, latitude]\n     * @param {Array<number>} stop point [longitude, latitude]\n     * @param {Array<Array<number>>} line\n     * @returns {Array<Array<number>>} line part of a line\n     * @example\n     * const line2 = ruler.lineSlice([-67.04, 50.5], [-67.05, 50.56], line1);\n     * //=line2\n     */\n    lineSlice(start, stop, line) {\n        let p1 = this.pointOnLine(line, start);\n        let p2 = this.pointOnLine(line, stop);\n\n        if (p1.index > p2.index || (p1.index === p2.index && p1.t > p2.t)) {\n            const tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n        }\n\n        const slice = [p1.point];\n\n        const l = p1.index + 1;\n        const r = p2.index;\n\n        if (!equals(line[l], slice[0]) && l <= r)\n            slice.push(line[l]);\n\n        for (let i = l + 1; i <= r; i++) {\n            slice.push(line[i]);\n        }\n\n        if (!equals(line[r], p2.point))\n            slice.push(p2.point);\n\n        return slice;\n    }\n\n    /**\n     * Returns a part of the given line between the start and the stop points indicated by distance along the line.\n     *\n     * @param {number} start distance\n     * @param {number} stop distance\n     * @param {Array<Array<number>>} line\n     * @returns {Array<Array<number>>} line part of a line\n     * @example\n     * const line2 = ruler.lineSliceAlong(10, 20, line1);\n     * //=line2\n     */\n    lineSliceAlong(start, stop, line) {\n        let sum = 0;\n        const slice = [];\n\n        for (let i = 0; i < line.length - 1; i++) {\n            const p0 = line[i];\n            const p1 = line[i + 1];\n            const d = this.distance(p0, p1);\n\n            sum += d;\n\n            if (sum > start && slice.length === 0) {\n                slice.push(interpolate(p0, p1, (start - (sum - d)) / d));\n            }\n\n            if (sum >= stop) {\n                slice.push(interpolate(p0, p1, (stop - (sum - d)) / d));\n                return slice;\n            }\n\n            if (sum > start) slice.push(p1);\n        }\n\n        return slice;\n    }\n\n    /**\n     * Given a point, returns a bounding box object ([w, s, e, n]) created from the given point buffered by a given distance.\n     *\n     * @param {Array<number>} p point [longitude, latitude]\n     * @param {number} buffer\n     * @returns {Array<number>} box object ([w, s, e, n])\n     * @example\n     * const bbox = ruler.bufferPoint([30.5, 50.5], 0.01);\n     * //=bbox\n     */\n    bufferPoint(p, buffer) {\n        const v = buffer / this.ky;\n        const h = buffer / this.kx;\n        return [\n            p[0] - h,\n            p[1] - v,\n            p[0] + h,\n            p[1] + v\n        ];\n    }\n\n    /**\n     * Given a bounding box, returns the box buffered by a given distance.\n     *\n     * @param {Array<number>} box object ([w, s, e, n])\n     * @param {number} buffer\n     * @returns {Array<number>} box object ([w, s, e, n])\n     * @example\n     * const bbox = ruler.bufferBBox([30.5, 50.5, 31, 51], 0.2);\n     * //=bbox\n     */\n    bufferBBox(bbox, buffer) {\n        const v = buffer / this.ky;\n        const h = buffer / this.kx;\n        return [\n            bbox[0] - h,\n            bbox[1] - v,\n            bbox[2] + h,\n            bbox[3] + v\n        ];\n    }\n\n    /**\n     * Returns true if the given point is inside in the given bounding box, otherwise false.\n     *\n     * @param {Array<number>} p point [longitude, latitude]\n     * @param {Array<number>} box object ([w, s, e, n])\n     * @returns {boolean}\n     * @example\n     * const inside = ruler.insideBBox([30.5, 50.5], [30, 50, 31, 51]);\n     * //=inside\n     */\n    insideBBox(p, bbox) {\n        return wrap(p[0] - bbox[0]) >= 0 &&\n               wrap(p[0] - bbox[2]) <= 0 &&\n               p[1] >= bbox[1] &&\n               p[1] <= bbox[3];\n    }\n}\n\nfunction equals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n\nfunction interpolate(a, b, t) {\n    const dx = wrap(b[0] - a[0]);\n    const dy = b[1] - a[1];\n    return [\n        a[0] + dx * t,\n        a[1] + dy * t\n    ];\n}\n\n// normalize a degree value into [-180..180] range\nfunction wrap(deg) {\n    while (deg < -180) deg += 360;\n    while (deg > 180) deg -= 360;\n    return deg;\n}\n","'use strict';\n\nmodule.exports = Point;\n\n/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);\n */\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone: function() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add:     function(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub:     function(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint:    function(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint:     function(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    mult:    function(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    div:     function(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate:  function(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {Array<Number>} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult: function(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit:    function() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp:    function() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round:   function() { return this.clone()._round(); },\n\n    /**\n     * Return the magitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {Number} magnitude\n     */\n    mag: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals: function(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    dist: function(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    distSqr: function(p) {\n        var dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {Number} angle\n     */\n    angle: function() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleTo: function(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleWith: function(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /*\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {Number} x the x-coordinate\n     * @param {Number} y the y-coordinate\n     * @return {Number} the angle in radians\n     */\n    angleWithSep: function(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    _matMult: function(m) {\n        var x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _add: function(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    _sub: function(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    _mult: function(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    _div: function(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    _multByPoint: function(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    _divByPoint: function(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit: function() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp: function() {\n        var y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    _rotate: function(angle) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _rotateAround: function(angle, p) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<Number>|Point|*} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (a) {\n    if (a instanceof Point) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        return new Point(a[0], a[1]);\n    }\n    return a;\n};\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","// @flow\n\n/**\n * The maximum value of a coordinate in the internal tile coordinate system. Coordinates of\n * all source features normalized to this extent upon load.\n *\n * The value is a consequence of the following:\n *\n * * Vertex buffer store positions as signed 16 bit integers.\n * * One bit is lost for signedness to support tile buffers.\n * * One bit is lost because the line vertex buffer used to pack 1 bit of other data into the int.\n * * One bit is lost to support features extending past the extent on the right edge of the tile.\n * * This leaves us with 2^13 = 8192\n *\n * @private\n * @readonly\n */\nexport default 8192;\n","// @flow\n\nimport {isValue} from \"../values.js\";\nimport type {Type} from \"../types.js\";\nimport {NumberType} from \"../types.js\";\nimport type {Expression} from \"../expression.js\";\nimport type ParsingContext from \"../parsing_context.js\";\nimport type EvaluationContext from \"../evaluation_context.js\";\nimport type {\n    GeoJSON,\n    GeoJSONPosition,\n    GeoJSONPoint,\n    GeoJSONMultiPoint,\n    GeoJSONLineString,\n    GeoJSONMultiLineString,\n    GeoJSONPolygon,\n    GeoJSONMultiPolygon\n} from \"@mapbox/geojson-types\";\nimport type {CanonicalTileID} from '../../../source/tile_id.js';\nimport {classifyRings, updateBBox, boxWithinBox, pointWithinPolygon, segmentIntersectSegment} from '../../util/geometry_util.js';\nimport type {BBox} from '../../util/geometry_util.js';\nimport CheapRuler from \"cheap-ruler\";\nimport Point from \"@mapbox/point-geometry\";\nimport TinyQueue from \"tinyqueue\";\nimport EXTENT from \"../../data/extent.js\";\n\ntype DistanceGeometry =\n    | GeoJSONPoint\n    | GeoJSONMultiPoint\n    | GeoJSONLineString\n    | GeoJSONMultiLineString\n    | GeoJSONPolygon\n    | GeoJSONMultiPolygon;\n\n// Inclusive index range for multipoint or linestring container\ntype IndexRange = [number, number];\ntype DistPair = { dist: number, range1: IndexRange, range2: IndexRange };\nfunction compareMax(a: DistPair, b: DistPair) {\n    return b.dist - a.dist;\n}\n\nconst MIN_POINT_SIZE = 100;\nconst MIN_LINE_POINT_SIZE = 50;\n\nfunction isDefaultBBOX(bbox: BBox) {\n    const defualtBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    if (defualtBBox.length !== bbox.length) {\n        return false;\n    }\n    for (let i = 0; i < defualtBBox.length; i++) {\n        if (defualtBBox[i] !== bbox[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getRangeSize(range: IndexRange) {\n    return range[1] - range[0] + 1;\n}\n\nfunction isRangeSafe(range: IndexRange, threshold: number) {\n    const ret = range[1] >= range[0] && range[1] < threshold;\n    if (!ret) {\n        console.warn(\"Distance Expression: Index is out of range\");\n    }\n    return ret;\n}\n\n// Split the point set(points or linestring) into two halves, using IndexRange to do in-place splitting.\n// If geometry is a line, the last point(here is the second index) of range1 needs to be included as the first point(here is the first index) of range2.\n// If geometry are points, just split the points equally(if possible) into two new point sets(here are two index ranges).\nfunction splitRange(range: IndexRange, isLine: boolean) {\n    if (range[0] > range[1]) return [null, null];\n    const size = getRangeSize(range);\n    if (isLine) {\n        if (size === 2) {\n            return [range, null];\n        }\n        const size1 = Math.floor(size / 2);\n        const range1: IndexRange = [range[0], range[0] + size1];\n        const range2: IndexRange = [range[0] + size1, range[1]];\n        return [range1, range2];\n    } else {\n        if (size === 1) {\n            return [range, null];\n        }\n        const size1 = Math.floor(size / 2) - 1;\n        const range1: IndexRange = [range[0], range[0] + size1];\n        const range2: IndexRange = [range[0] + size1 + 1, range[1]];\n        return [range1, range2];\n    }\n}\n\nfunction getBBox(pointSets: Array<GeoJSONPosition>, range: IndexRange) {\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    if (!isRangeSafe(range, pointSets.length)) return bbox;\n    for (let i = range[0]; i <= range[1]; ++i) {\n        updateBBox(bbox, pointSets[i]);\n    }\n    return bbox;\n}\n\nfunction getPolygonBBox(polygon: Array<Array<GeoJSONPosition>>) {\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (let i = 0; i < polygon.length; ++i) {\n        for (let j = 0; j < polygon[i].length; ++j) {\n            updateBBox(bbox, polygon[i][j]);\n        }\n    }\n    return bbox;\n}\n\n// Calculate the distance between two bounding boxes.\n// Calculate the delta in x and y direction, and use two fake points {0.0, 0.0} and {dx, dy} to calculate the distance.\n// Distance will be 0.0 if bounding box are overlapping.\nfunction bboxToBBoxDistance(bbox1: BBox, bbox2: BBox, ruler: CheapRuler) {\n    if (isDefaultBBOX(bbox1) || isDefaultBBOX(bbox2)) {\n        return NaN;\n    }\n    let dx = 0.0;\n    let dy = 0.0;\n    // bbox1 in left side\n    if (bbox1[2] < bbox2[0]) {\n        dx = bbox2[0] - bbox1[2];\n    }\n    // bbox1 in right side\n    if (bbox1[0] > bbox2[2]) {\n        dx = bbox1[0] - bbox2[2];\n    }\n    // bbox1 in above side\n    if (bbox1[1] > bbox2[3]) {\n        dy = bbox1[1] - bbox2[3];\n    }\n    // bbox1 in down side\n    if (bbox1[3] < bbox2[1]) {\n        dy = bbox2[1] - bbox1[3];\n    }\n    return ruler.distance([0.0, 0.0], [dx, dy]);\n}\n\nfunction lngFromMercatorX(x: number): number {\n    return x * 360 - 180;\n}\n\nfunction latFromMercatorY(y: number): number {\n    const y2 = 180 - y * 360;\n    return 360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90;\n}\n\nfunction getLngLatPoint(coord: Point, canonical: CanonicalTileID) {\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    const x = (coord.x / EXTENT + canonical.x) / tilesAtZoom;\n    const y = (coord.y / EXTENT + canonical.y) / tilesAtZoom;\n    return [lngFromMercatorX(x), latFromMercatorY(y)];\n}\n\nfunction getLngLatPoints(coordinates: Array<Point>, canonical: CanonicalTileID) {\n    const coords = [];\n    for (let i = 0; i < coordinates.length; ++i) {\n        coords.push(getLngLatPoint(coordinates[i], canonical));\n    }\n    return coords;\n}\n\nfunction pointToLineDistance(point: GeoJSONPosition, line: Array<GeoJSONPosition>, ruler: CheapRuler) {\n    const nearestPoint = ruler.pointOnLine(line, point).point;\n    return ruler.distance(point, nearestPoint);\n}\n\nfunction pointsToLineDistance(points: Array<GeoJSONPosition>, rangeA: IndexRange, line: Array<GeoJSONPosition>, rangeB: IndexRange, ruler: CheapRuler) {\n    const subLine = line.slice(rangeB[0], rangeB[1] + 1);\n    let dist = Infinity;\n    for (let i = rangeA[0]; i <= rangeA[1]; ++i) {\n        if ((dist = Math.min(dist, pointToLineDistance(points[i], subLine, ruler))) === 0.0) return 0.0;\n    }\n    return dist;\n}\n\n// precondition is two segments are not intersecting with each other\nfunction segmentToSegmentDistance(p1: GeoJSONPosition, p2: GeoJSONPosition, q1: GeoJSONPosition, q2: GeoJSONPosition, ruler: CheapRuler) {\n    const dist1 = Math.min(\n        ruler.pointToSegmentDistance(p1, q1, q2),\n        ruler.pointToSegmentDistance(p2, q1, q2)\n    );\n    const dist2 = Math.min(\n        ruler.pointToSegmentDistance(q1, p1, p2),\n        ruler.pointToSegmentDistance(q2, p1, p2)\n    );\n\n    return Math.min(dist1, dist2);\n}\n\nfunction lineToLineDistance(line1: Array<GeoJSONPosition>, range1: IndexRange, line2: Array<GeoJSONPosition>, range2: IndexRange, ruler: CheapRuler) {\n    if (!isRangeSafe(range1, line1.length) || !isRangeSafe(range2, line2.length)) {\n        return NaN;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i < range1[1]; ++i) {\n        for (let j = range2[0]; j < range2[1]; ++j) {\n            if (segmentIntersectSegment(line1[i], line1[i + 1], line2[j], line2[j + 1])) return 0.0;\n            dist = Math.min(dist, segmentToSegmentDistance(line1[i], line1[i + 1], line2[j], line2[j + 1], ruler));\n        }\n    }\n    return dist;\n}\n\nfunction pointsToPointsDistance(pointSet1: Array<GeoJSONPosition>, range1: IndexRange, pointSet2: Array<GeoJSONPosition>, range2: IndexRange, ruler: CheapRuler) {\n    if (!isRangeSafe(range1, pointSet1.length) || !isRangeSafe(range2, pointSet2.length)) {\n        return NaN;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i <= range1[1]; ++i) {\n        for (let j = range2[0]; j <= range2[1]; ++j) {\n            if ((dist = Math.min(dist, ruler.distance(pointSet1[i], pointSet2[j]))) === 0.0) return dist;\n        }\n    }\n    return dist;\n}\n\nfunction pointToPolygonDistance(point: GeoJSONPosition, polygon: Array<Array<GeoJSONPosition>>, ruler: CheapRuler) {\n    if (pointWithinPolygon(point, polygon, true /*trueOnBoundary*/)) return 0.0;\n    let dist = Infinity;\n    for (const ring of polygon) {\n        const ringLen = ring.length;\n        if (ringLen < 2) {\n            console.warn(\"Distance Expression: Invalid polygon!\");\n            return NaN;\n        }\n        if (ring[0] !== ring[ringLen - 1]) {\n            if ((dist = Math.min(dist, ruler.pointToSegmentDistance(point, ring[ringLen - 1], ring[0]))) === 0.0) return dist;\n        }\n        if ((dist = Math.min(dist, pointToLineDistance(point, ring, ruler))) === 0.0) return dist;\n    }\n    return dist;\n}\n\nfunction lineToPolygonDistance(line: Array<GeoJSONPosition>, range: IndexRange, polygon: Array<Array<GeoJSONPosition>>, ruler: CheapRuler) {\n    if (!isRangeSafe(range, line.length)) {\n        return NaN;\n    }\n    for (let i = range[0]; i <= range[1]; ++i) {\n        if (pointWithinPolygon(line[i], polygon, true /*trueOnBoundary*/)) return 0.0;\n    }\n    let dist = Infinity;\n    for (let i = range[0]; i < range[1]; ++i) {\n        for (const ring of polygon) {\n            for (let j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n                if (segmentIntersectSegment(line[i], line[i + 1], ring[k], ring[j])) return 0.0;\n                dist = Math.min(dist, segmentToSegmentDistance(line[i], line[i + 1], ring[k], ring[j], ruler));\n            }\n        }\n    }\n    return dist;\n}\n\nfunction polygonIntersect(polygon1: Array<Array<GeoJSONPosition>>, polygon2: Array<Array<GeoJSONPosition>>) {\n    for (const ring of polygon1) {\n        for (let i = 0; i <= ring.length - 1; ++i) {\n            if (pointWithinPolygon(ring[i], polygon2, true /*trueOnBoundary*/)) return true;\n        }\n    }\n    return false;\n}\n\nfunction polygonToPolygonDistance(polygon1: Array<Array<GeoJSONPosition>>, polygon2: Array<Array<GeoJSONPosition>>, ruler: CheapRuler, currentMiniDist: number = Infinity) {\n    const bbox1 = getPolygonBBox(polygon1);\n    const bbox2 = getPolygonBBox(polygon2);\n    if (currentMiniDist !== Infinity && bboxToBBoxDistance(bbox1, bbox2, ruler) >= currentMiniDist) {\n        return currentMiniDist;\n    }\n    if (boxWithinBox(bbox1, bbox2)) {\n        if (polygonIntersect(polygon1, polygon2)) return 0.0;\n    } else if (polygonIntersect(polygon2, polygon1)) {\n        return 0.0;\n    }\n    let dist = currentMiniDist;\n    for (const ring1 of polygon1) {\n        for (let i = 0, len1 = ring1.length, l = len1 - 1; i < len1; l = i++) {\n            for (const ring2 of polygon2) {\n                for (let j = 0, len2 = ring2.length, k = len2 - 1; j < len2; k = j++) {\n                    if (segmentIntersectSegment(ring1[l], ring1[i], ring2[k], ring2[j])) return 0.0;\n                    dist = Math.min(dist, segmentToSegmentDistance(ring1[l], ring1[i], ring2[k], ring2[j], ruler));\n                }\n            }\n        }\n    }\n    return dist;\n}\n\nfunction updateQueue(distQueue: any, miniDist: number, ruler: CheapRuler, pointSet1: Array<GeoJSONPosition>, pointSet2: Array<GeoJSONPosition>, r1: IndexRange | null, r2: IndexRange | null) {\n    if (r1 === null || r2 === null) return;\n    const tempDist = bboxToBBoxDistance(getBBox(pointSet1, r1), getBBox(pointSet2, r2), ruler);\n    // Insert new pair to the queue if the bbox distance is less than miniDist, the pair with biggest distance will be at the top\n    if (tempDist < miniDist) distQueue.push({dist: tempDist, range1: r1, range2: r2});\n}\n\n// Divide and conquer, the time complexity is O(n*lgn), faster than Brute force O(n*n)\n// Most of the time, use index for in-place processing.\nfunction pointSetToPolygonDistance(pointSets: Array<GeoJSONPosition>, isLine: boolean, polygon: Array<Array<GeoJSONPosition>>, ruler: CheapRuler, currentMiniDist: number = Infinity) {\n    let miniDist = Math.min(ruler.distance(pointSets[0], polygon[0][0]), currentMiniDist);\n    if (miniDist === 0.0) return miniDist;\n    const initialDistPair: DistPair = {\n        dist: 0,\n        range1: [0, pointSets.length - 1],\n        range2: [0, 0]\n    };\n    const distQueue = new TinyQueue<DistPair>([initialDistPair], compareMax);\n\n    const setThreshold = isLine ? MIN_LINE_POINT_SIZE : MIN_POINT_SIZE;\n    const polyBBox = getPolygonBBox(polygon);\n\n    while (distQueue.length) {\n        const distPair = distQueue.pop();\n        if (distPair.dist >= miniDist) continue;\n        const range = distPair.range1;\n        // In case the set size are relatively small, we could use brute-force directly\n        if (getRangeSize(range) <= setThreshold) {\n            if (!isRangeSafe(range, pointSets.length)) return NaN;\n            if (isLine) {\n                const tempDist = lineToPolygonDistance(pointSets, range, polygon, ruler);\n                if ((miniDist = Math.min(miniDist, tempDist)) === 0.0) return miniDist;\n            } else {\n                for (let i = range[0]; i <= range[1]; ++i) {\n                    const tempDist = pointToPolygonDistance(pointSets[i], polygon, ruler);\n                    if ((miniDist = Math.min(miniDist, tempDist)) === 0.0) return miniDist;\n                }\n            }\n        } else {\n            const newRanges = splitRange(range, isLine);\n            if (newRanges[0] !== null) {\n                const tempDist = bboxToBBoxDistance(getBBox(pointSets, newRanges[0]), polyBBox, ruler);\n                if (tempDist < miniDist) distQueue.push({dist: tempDist, range1: newRanges[0], range2: [0, 0]});\n            }\n            if (newRanges[1] !== null) {\n                const tempDist = bboxToBBoxDistance(getBBox(pointSets, newRanges[1]), polyBBox, ruler);\n                if (tempDist < miniDist) distQueue.push({dist: tempDist, range1: newRanges[1], range2: [0, 0]});\n            }\n        }\n    }\n    return miniDist;\n}\n\nfunction pointSetsDistance(pointSet1: Array<GeoJSONPosition>, isLine1: boolean, pointSet2: Array<GeoJSONPosition>, isLine2: boolean, ruler: CheapRuler, currentMiniDist: number = Infinity) {\n    let miniDist = Math.min(currentMiniDist, ruler.distance(pointSet1[0], pointSet2[0]));\n    if (miniDist === 0.0) return miniDist;\n    const initialDistPair: DistPair = {\n        dist: 0,\n        range1: [0, pointSet1.length - 1],\n        range2: [0, pointSet2.length - 1]\n    };\n    const distQueue = new TinyQueue<DistPair>([initialDistPair], compareMax);\n\n    const set1Threshold = isLine1 ? MIN_LINE_POINT_SIZE : MIN_POINT_SIZE;\n    const set2Threshold = isLine2 ? MIN_LINE_POINT_SIZE : MIN_POINT_SIZE;\n\n    while (distQueue.length) {\n        const distPair = distQueue.pop();\n        if (distPair.dist >= miniDist) continue;\n        const rangeA = distPair.range1;\n        const rangeB = distPair.range2;\n        // In case the set size are relatively small, we could use brute-force directly\n        if (getRangeSize(rangeA) <= set1Threshold && getRangeSize(rangeB) <= set2Threshold) {\n            if (!isRangeSafe(rangeA, pointSet1.length) || !isRangeSafe(rangeB, pointSet2.length)) {\n                return NaN;\n            }\n            if (isLine1 && isLine2) {\n                miniDist = Math.min(miniDist, lineToLineDistance(pointSet1, rangeA, pointSet2, rangeB, ruler));\n            } else if (!isLine1 && !isLine2) {\n                miniDist = Math.min(miniDist, pointsToPointsDistance(pointSet1, rangeA, pointSet2, rangeB, ruler));\n            } else if (isLine1 && !isLine2) {\n                miniDist = Math.min(miniDist, pointsToLineDistance(pointSet2, rangeB, pointSet1, rangeA, ruler));\n            } else if (!isLine1 && isLine2) {\n                miniDist = Math.min(miniDist, pointsToLineDistance(pointSet1, rangeA, pointSet2, rangeB, ruler));\n            }\n            if (miniDist === 0.0) return miniDist;\n        } else {\n            const newRangesA = splitRange(rangeA, isLine1);\n            const newRangesB = splitRange(rangeB, isLine2);\n            updateQueue(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[0]);\n            updateQueue(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[1]);\n            updateQueue(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[0]);\n            updateQueue(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[1]);\n        }\n    }\n    return miniDist;\n}\n\nfunction pointSetToLinesDistance(pointSet: Array<GeoJSONPosition>, isLine: boolean, lines: Array<Array<GeoJSONPosition>>, ruler: CheapRuler, currentMiniDist: number = Infinity) {\n    let dist = currentMiniDist;\n    const bbox1 = getBBox(pointSet, [0, pointSet.length - 1]);\n    for (const line of lines) {\n        if (dist !== Infinity && bboxToBBoxDistance(bbox1, getBBox(line, [0, line.length - 1]), ruler) >= dist) continue;\n        dist = Math.min(dist, pointSetsDistance(pointSet, isLine, line, true /*isLine*/, ruler, dist));\n        if (dist === 0.0) return dist;\n    }\n    return dist;\n}\n\nfunction pointSetToPolygonsDistance(points: Array<GeoJSONPosition>, isLine: boolean, polygons: Array<Array<Array<GeoJSONPosition>>>, ruler: CheapRuler, currentMiniDist: number = Infinity) {\n    let dist = currentMiniDist;\n    const bbox1 = getBBox(points, [0, points.length - 1]);\n    for (const polygon of polygons) {\n        if (dist !== Infinity && bboxToBBoxDistance(bbox1, getPolygonBBox(polygon), ruler) >= dist) continue;\n        const tempDist = pointSetToPolygonDistance(points, isLine, polygon, ruler, dist);\n        if (isNaN(tempDist)) return tempDist;\n        if ((dist = Math.min(dist, tempDist)) === 0.0) return dist;\n    }\n    return dist;\n}\n\nfunction polygonsToPolygonsDistance(polygons1: Array<Array<Array<GeoJSONPosition>>>, polygons2: Array<Array<Array<GeoJSONPosition>>>, ruler: CheapRuler) {\n    let dist = Infinity;\n    for (const polygon1 of polygons1) {\n        for (const polygon2 of polygons2) {\n            const tempDist = polygonToPolygonDistance(polygon1, polygon2, ruler, dist);\n            if (isNaN(tempDist)) return tempDist;\n            if ((dist = Math.min(dist, tempDist)) === 0.0) return dist;\n        }\n    }\n    return dist;\n}\n\nfunction pointsToGeometryDistance(originGeometry: Array<Array<Point>>, canonical: CanonicalTileID, geometry: DistanceGeometry) {\n    const lngLatPoints = [];\n    for (const points of originGeometry) {\n        for (const point of points) {\n            lngLatPoints.push(getLngLatPoint(point, canonical));\n        }\n    }\n    const ruler = new CheapRuler(lngLatPoints[0][1], 'meters');\n    if (geometry.type === 'Point' || geometry.type === 'MultiPoint' || geometry.type === 'LineString') {\n        return pointSetsDistance(lngLatPoints, false /*isLine*/,\n            geometry.type === \"Point\" ? [geometry.coordinates] : geometry.coordinates,\n            geometry.type === 'LineString' /*isLine*/, ruler);\n    }\n    if (geometry.type === 'MultiLineString') {\n        return pointSetToLinesDistance(lngLatPoints, false /*isLine*/,  geometry.coordinates, ruler);\n    }\n    if (geometry.type === 'Polygon' || geometry.type === 'MultiPolygon') {\n        return pointSetToPolygonsDistance(lngLatPoints, false /*isLine*/,\n            geometry.type === \"Polygon\" ? [geometry.coordinates] : geometry.coordinates, ruler);\n    }\n    return null;\n}\n\nfunction linesToGeometryDistance(originGeometry: Array<Array<Point>>, canonical: CanonicalTileID, geometry: DistanceGeometry) {\n    const lngLatLines = [];\n    for (const line of originGeometry) {\n        const lngLatLine = [];\n        for (const point of line) {\n            lngLatLine.push(getLngLatPoint(point, canonical));\n        }\n        lngLatLines.push(lngLatLine);\n    }\n    const ruler = new CheapRuler(lngLatLines[0][0][1], 'meters');\n    if (geometry.type === 'Point' || geometry.type === 'MultiPoint' || geometry.type === 'LineString') {\n        return pointSetToLinesDistance(\n            geometry.type === \"Point\" ? [geometry.coordinates] : geometry.coordinates,\n            geometry.type === 'LineString' /*isLine*/, lngLatLines, ruler);\n    }\n    if (geometry.type === 'MultiLineString') {\n        let dist = Infinity;\n        for (let i = 0; i < geometry.coordinates.length; i++) {\n            const tempDist = pointSetToLinesDistance(geometry.coordinates[i], true /*isLine*/, lngLatLines, ruler, dist);\n            if (isNaN(tempDist)) return tempDist;\n            if ((dist = Math.min(dist, tempDist)) === 0.0) return dist;\n        }\n        return dist;\n    }\n    if (geometry.type === 'Polygon' || geometry.type === 'MultiPolygon') {\n        let dist = Infinity;\n        for (let i = 0; i < lngLatLines.length; i++) {\n            const tempDist = pointSetToPolygonsDistance(lngLatLines[i], true /*isLine*/,\n                geometry.type === \"Polygon\" ? [geometry.coordinates] : geometry.coordinates,\n                ruler, dist);\n            if (isNaN(tempDist)) return tempDist;\n            if ((dist = Math.min(dist, tempDist)) === 0.0) return dist;\n        }\n        return dist;\n    }\n    return null;\n}\n\nfunction polygonsToGeometryDistance(originGeometry: Array<Array<Point>>, canonical: CanonicalTileID, geometry: DistanceGeometry) {\n    const lngLatPolygons = [];\n    for (const polygon of classifyRings(originGeometry, 0)) {\n        const lngLatPolygon = [];\n        for (let i = 0; i < polygon.length; ++i) {\n            lngLatPolygon.push(getLngLatPoints(polygon[i], canonical));\n        }\n        lngLatPolygons.push(lngLatPolygon);\n    }\n    const ruler = new CheapRuler(lngLatPolygons[0][0][0][1], 'meters');\n    if (geometry.type === 'Point' || geometry.type === 'MultiPoint' || geometry.type === 'LineString') {\n        return pointSetToPolygonsDistance(\n            geometry.type === \"Point\" ? [geometry.coordinates] : geometry.coordinates,\n            geometry.type === 'LineString' /*isLine*/, lngLatPolygons, ruler);\n    }\n    if (geometry.type === 'MultiLineString') {\n        let dist = Infinity;\n        for (let i = 0; i < geometry.coordinates.length; i++) {\n            const tempDist = pointSetToPolygonsDistance(geometry.coordinates[i], true /*isLine*/, lngLatPolygons, ruler, dist);\n            if (isNaN(tempDist)) return tempDist;\n            if ((dist = Math.min(dist, tempDist)) === 0.0) return dist;\n        }\n        return dist;\n    }\n    if (geometry.type === 'Polygon' || geometry.type === 'MultiPolygon') {\n        return polygonsToPolygonsDistance(\n            geometry.type === \"Polygon\" ? [geometry.coordinates] : geometry.coordinates,\n            lngLatPolygons, ruler);\n    }\n    return null;\n}\n\nfunction isTypeValid(type: string) {\n    return (\n        type === \"Point\" ||\n        type === \"MultiPoint\" ||\n        type === \"LineString\" ||\n        type === \"MultiLineString\" ||\n        type === \"Polygon\" ||\n        type === \"MultiPolygon\"\n    );\n}\nclass Distance implements Expression {\n    type: Type;\n    geojson: GeoJSON;\n    geometries: DistanceGeometry;\n\n    constructor(geojson: GeoJSON, geometries: DistanceGeometry) {\n        this.type = NumberType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Distance {\n        if (args.length !== 2) {\n            return context.error(\n                `'distance' expression requires either one argument, but found ' ${args.length -\n                    1} instead.`\n            );\n        }\n        if (isValue(args[1])) {\n            const geojson = (args[1]: Object);\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    if (isTypeValid(geojson.features[i].geometry.type)) {\n                        return new Distance(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                if (isTypeValid(geojson.geometry.type)) {\n                    return new Distance(geojson, geojson.geometry);\n                }\n            } else if (isTypeValid(geojson.type)) {\n                return new Distance(geojson, geojson);\n            }\n        }\n        return context.error(\n            \"'distance' expression needs to be an array with format [\\'Distance\\', GeoJSONObj].\"\n        );\n    }\n\n    evaluate(ctx: EvaluationContext): number | null {\n        const geometry = ctx.geometry();\n        const canonical = ctx.canonicalID();\n        if (geometry != null && canonical != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsToGeometryDistance(geometry, canonical, this.geometries);\n            }\n            if (ctx.geometryType() === 'LineString') {\n                return linesToGeometryDistance(geometry, canonical, this.geometries);\n            }\n            if (ctx.geometryType() === 'Polygon') {\n                return polygonsToGeometryDistance(geometry, canonical, this.geometries);\n            }\n            console.warn(\"Distance Expression: currently only evaluates valid Point/LineString/Polygon geometries.\");\n        } else {\n            console.warn(\"Distance Expression: requirs valid feature and canonical information.\");\n        }\n        return null;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): Array<mixed> {\n        return ['distance', this.geojson];\n    }\n}\n\nexport default Distance;\n","// @flow\n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\nimport Distance from './definitions/distance.js';\nimport type {Expression} from './expression.js';\n\nfunction isFeatureConstant(e: Expression): boolean {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    if (e instanceof Distance) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e: Expression): boolean {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isConfigConstant(e: Expression): boolean {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'config') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isConfigConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e: Expression, properties: Array<string>): boolean {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant, isConfigConstant};\n","// @flow\n\nimport type {Type} from '../types.js';\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext  from '../evaluation_context.js';\n\nclass Var implements Expression {\n    type: Type;\n    name: string;\n    boundExpression: Expression;\n\n    constructor(name: string, boundExpression: Expression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): void | Var {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): Array<string> {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","// @flow\n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport Distance from './definitions/distance.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\nimport type {Expression, ExpressionRegistry} from './expression.js';\nimport type {Type} from './types.js';\nimport type {ConfigOptions} from '../../style/properties.js';\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    registry: ExpressionRegistry;\n    path: Array<number>;\n    key: string;\n    scope: Scope;\n    errors: Array<ParsingError>;\n    _scope: ?string;\n    options: ?ConfigOptions;\n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    expectedType: ?Type;\n\n    constructor(\n        registry: ExpressionRegistry,\n        path: Array<number> = [],\n        expectedType: ?Type,\n        scope: Scope = new Scope(),\n        errors: Array<ParsingError> = [],\n        _scope: ?string,\n        options?: ?ConfigOptions\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n        this._scope = _scope;\n        this.options = options;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr: mixed,\n        index?: number,\n        expectedType?: ?Type,\n        bindings?: Array<[string, Expression]>,\n        options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'} = {}\n    ): ?Expression {\n        if (index || expectedType) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr: mixed, options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'}): ?Expression {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed: Expression, type: Type, typeAnnotation: 'assert' | 'coerce' | 'omit') {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const Expr = typeof expr[0] === 'string' ? this.registry[expr[0]] : undefined;\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext(this._scope, this.options);\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            // Try to parse as array\n            return Coercion.parse(['to-array', expr], this);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index: ?number, expectedType?: ?Type, bindings?: Array<[string, Expression]>): ParsingContext {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors,\n            this._scope,\n            this.options\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error: string, ...keys: Array<number>) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected: Type, t: Type): ?string {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression: Expression) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CompoundExpression && expression.name === 'config') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    }  else if (expression instanceof Within) {\n        return false;\n    } else if (expression instanceof Distance) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'raster-value', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center', 'measure-light']);\n}\n","// @flow\n\nimport RuntimeError from './runtime_error.js';\n\nimport type {Expression} from './expression.js';\n\nexport type Stops = Array<[number, Expression]>;\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops: Array<number>, input: number): number {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","// @flow\n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\nimport type {Stops} from '../stops.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Step implements Expression {\n    type: Type;\n\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, input: Expression, stops: Stops) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Step {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","'use strict';\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p1y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype = {\n    sampleCurveX: function (t) {\n        // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n        return ((this.ax * t + this.bx) * t + this.cx) * t;\n    },\n\n    sampleCurveY: function (t) {\n        return ((this.ay * t + this.by) * t + this.cy) * t;\n    },\n\n    sampleCurveDerivativeX: function (t) {\n        return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n    },\n\n    solveCurveX: function (x, epsilon) {\n        if (epsilon === undefined) epsilon = 1e-6;\n\n        if (x < 0.0) return 0.0;\n        if (x > 1.0) return 1.0;\n\n        var t = x;\n\n        // First try a few iterations of Newton's method - normally very fast.\n        for (var i = 0; i < 8; i++) {\n            var x2 = this.sampleCurveX(t) - x;\n            if (Math.abs(x2) < epsilon) return t;\n\n            var d2 = this.sampleCurveDerivativeX(t);\n            if (Math.abs(d2) < 1e-6) break;\n\n            t = t - x2 / d2;\n        }\n\n        // Fall back to the bisection method for reliability.\n        var t0 = 0.0;\n        var t1 = 1.0;\n        t = x;\n\n        for (i = 0; i < 20; i++) {\n            x2 = this.sampleCurveX(t);\n            if (Math.abs(x2 - x) < epsilon) break;\n\n            if (x > x2) {\n                t0 = t;\n            } else {\n                t1 = t;\n            }\n\n            t = (t1 - t0) * 0.5 + t0;\n        }\n\n        return t;\n    },\n\n    solve: function (x, epsilon) {\n        return this.sampleCurveY(this.solveCurveX(x, epsilon));\n    }\n};\n","// @flow\n\nimport Color from './color.js';\n\nexport function number(a: number, b: number, t: number): number {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from: Color, to: Color, t: number): Color {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from: Array<number>, to: Array<number>, t: number): Array<number> {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","// @flow\n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\ntype LABColor = {\n    l: number,\n    a: number,\n    b: number,\n    alpha: number\n};\n\ntype HCLColor = {\n    h: number,\n    c: number,\n    l: number,\n    alpha: number\n};\n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t: number) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t: number) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x: number) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x: number) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor: Color): LABColor {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor: LABColor): Color {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from: LABColor, to: LABColor, t: number): LABColor {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor: Color): HCLColor {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor: HCLColor): Color {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a: number, b: number, t: number) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from: HCLColor, to: HCLColor, t: number): HCLColor {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","// @flow\n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\nimport type {Stops} from '../stops.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nexport type InterpolationType =\n    { name: 'linear' } |\n    { name: 'exponential', base: number } |\n    { name: 'cubic-bezier', controlPoints: [number, number, number, number] };\n\nclass Interpolate implements Expression {\n    type: Type;\n\n    operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab';\n    interpolation: InterpolationType;\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab', interpolation: InterpolationType, input: Expression, stops: Stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation: InterpolationType, input: number, lower: number, upper: number): number {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Interpolate {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints: any)\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator: any), interpolation, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext): Color {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]: any)(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input: number, base: number, lowerValue: number, upperValue: number) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","// @flow\n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Coalesce implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Coalesce {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType: Type = (null: any);\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType: any), parsedArgs);\n    }\n\n    evaluate(ctx: EvaluationContext): any | null {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","// @flow\n\nimport type {Type} from '../types.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext  from '../evaluation_context.js';\n\nclass Let implements Expression {\n    type: Type;\n    bindings: Array<[string, Expression]>;\n    result: Expression;\n\n    constructor(bindings: Array<[string, Expression]>, result: Expression) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Let {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings: Array<[string, Expression]> = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined(): boolean {\n        return this.result.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","// @flow\n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type, ArrayType} from '../types.js';\nimport type {Value} from '../values.js';\n\nclass At implements Expression {\n    type: Type;\n    index: Expression;\n    input: Expression;\n\n    constructor(type: Type, index: Expression, input: Expression) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?At {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t: ArrayType = (input.type: any);\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx: EvaluationContext): Value {\n        const index = ((this.index.evaluate(ctx): any): number);\n        const array = ((this.input.evaluate(ctx): any): Array<Value>);\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","// @flow\n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass In implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n\n    constructor(needle: Expression, haystack: Expression) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?In {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx: EvaluationContext): boolean {\n        const needle = (this.needle.evaluate(ctx): any);\n        const haystack = (this.haystack.evaluate(ctx): any);\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","// @flow\n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass IndexOf implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n    fromIndex: ?Expression;\n\n    constructor(needle: Expression, haystack: Expression, fromIndex?: Expression) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?IndexOf {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const needle = (this.needle.evaluate(ctx): any);\n        const haystack = (this.haystack.evaluate(ctx): any);\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx): number);\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n","// @flow\n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType, type Type} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\n\n// Map input label values to output expression index\ntype Cases = {[number | string]: number};\n\nclass Match implements Expression {\n    type: Type;\n    inputType: Type;\n\n    input: Expression;\n    cases: Cases;\n    outputs: Array<Expression>;\n    otherwise: Expression;\n\n    constructor(inputType: Type, outputType: Type, input: Expression, cases: Cases, outputs: Array<Expression>, otherwise: Expression) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Match {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType: ?Type;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType: any), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType: any), (outputType: any), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const input = (this.input.evaluate(ctx): any);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput: Array<[number, Array<number | string>]> = [];\n        const outputLookup: {[index: number]: number} = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label: number | string) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\ntype Branches = Array<[Expression, Expression]>;\n\nclass Case implements Expression {\n    type: Type;\n\n    branches: Branches;\n    otherwise: Expression;\n\n    constructor(type: Type, branches: Branches, otherwise: Expression) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Case {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType: ?Type;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType: any), branches, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","// @flow\n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Slice implements Expression {\n    type: Type;\n    input: Expression;\n    beginIndex: Expression;\n    endIndex: ?Expression;\n\n    constructor(type: Type, input: Expression, beginIndex: Expression, endIndex?: Expression) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Slice {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const input = (this.input.evaluate(ctx): any);\n        const beginIndex = (this.beginIndex.evaluate(ctx): number);\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx): number);\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n","// @flow\n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression, ExpressionRegistration} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ntype ComparisonOperator = '==' | '!=' | '<' | '>' | '<=' | '>=' ;\n\nfunction isComparableType(op: ComparisonOperator, type: Type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx: EvaluationContext, a: any, b: any): boolean { return a === b; }\nfunction neq(ctx: EvaluationContext, a: any, b: any): boolean { return a !== b; }\nfunction lt(ctx: EvaluationContext, a: any, b: any): boolean { return a < b; }\nfunction gt(ctx: EvaluationContext, a: any, b: any): boolean { return a > b; }\nfunction lteq(ctx: EvaluationContext, a: any, b: any): boolean { return a <= b; }\nfunction gteq(ctx: EvaluationContext, a: any, b: any): boolean { return a >= b; }\n\nfunction eqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op: ComparisonOperator, compareBasic: (EvaluationContext, any, any) => boolean, compareWithCollator: (EvaluationContext, any, any, any) => boolean): ExpressionRegistration {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    // $FlowFixMe[method-unbinding]\n    return class Comparison implements Expression {\n        type: Type;\n        lhs: Expression;\n        rhs: Expression;\n        collator: ?Expression;\n        hasUntypedArgument: boolean;\n\n        constructor(lhs: Expression, rhs: Expression, collator: ?Expression) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        // $FlowFixMe[method-unbinding]\n        static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op: ComparisonOperator = (args[0]: any);\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx: EvaluationContext): boolean {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn: (_: Expression) => void) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined(): boolean {\n            return true;\n        }\n\n        serialize(): SerializedExpression {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals: $Call<typeof makeComparison, '==', typeof eq, typeof eqCollate> = makeComparison('==', eq, eqCollate);\nexport const NotEquals: $Call<typeof makeComparison, '!=', typeof neq, typeof neqCollate> = makeComparison('!=', neq, neqCollate);\nexport const LessThan: $Call<typeof makeComparison, '<', typeof lt, typeof ltCollate> = makeComparison('<', lt, ltCollate);\nexport const GreaterThan: $Call<typeof makeComparison, '>', typeof gt, typeof gtCollate> = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual: $Call<typeof makeComparison, '<=', typeof lteq, typeof lteqCollate> = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual: $Call<typeof makeComparison, '>=', typeof gteq, typeof gteqCollate> = makeComparison('>=', gteq, gteqCollate);\n","// @flow\n\nimport {StringType, NumberType} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\nexport default class NumberFormat implements Expression {\n    type: Type;\n    number: Expression;\n    locale: Expression | null;   // BCP 47 language tag\n    currency: Expression | null; // ISO 4217 currency code, required if style=currency\n    unit: Expression | null;     // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n    minFractionDigits: Expression | null; // Default 0\n    maxFractionDigits: Expression | null; // Default 3\n\n    constructor(number: Expression,\n                locale: Expression | null,\n                currency: Expression | null,\n                unit: Expression | null,\n                minFractionDigits: Expression | null,\n                maxFractionDigits: Expression | null) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx: EvaluationContext): string {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style:\n                    (this.currency && \"currency\") ||\n                    (this.unit && \"unit\") ||\n                    \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","// @flow\n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Length implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Length {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx: EvaluationContext): any | number {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","// @flow\n\n// Seeded pseudo random generator function\nexport function mulberry32(a: number): () => number {\n    return function () {\n        a |= 0;\n        a = (a + 0x6d2b79f5) | 0;\n        let t = Math.imul(a ^ (a >>> 15), 1 | a);\n        t = (t + Math.imul(t ^ (t >>> 7), 61 | t)) ^ t;\n        return ((t ^ (t >>> 14)) >>> 0) / 4294967296;\n    };\n}\n","// @flow\n\nimport {\n    type Type,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, validateHSLA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\nimport Distance from './distance.js';\nimport {mulberry32} from '../../util/random.js';\n\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Varargs} from '../compound_expression.js';\nimport type {Expression, ExpressionRegistry} from '../expression.js';\n\nconst expressions: ExpressionRegistry = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    // $FlowFixMe[method-unbinding]\n    'array': Assertion,\n    // $FlowFixMe[method-unbinding]\n    'at': At,\n    'boolean': Assertion,\n    // $FlowFixMe[method-unbinding]\n    'case': Case,\n    // $FlowFixMe[method-unbinding]\n    'coalesce': Coalesce,\n    // $FlowFixMe[method-unbinding]\n    'collator': CollatorExpression,\n    // $FlowFixMe[method-unbinding]\n    'format': FormatExpression,\n    // $FlowFixMe[method-unbinding]\n    'image': ImageExpression,\n    // $FlowFixMe[method-unbinding]\n    'in': In,\n    // $FlowFixMe[method-unbinding]\n    'index-of': IndexOf,\n    // $FlowFixMe[method-unbinding]\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    // $FlowFixMe[method-unbinding]\n    'length': Length,\n    // $FlowFixMe[method-unbinding]\n    'let': Let,\n    // $FlowFixMe[method-unbinding]\n    'literal': Literal,\n    // $FlowFixMe[method-unbinding]\n    'match': Match,\n    'number': Assertion,\n    // $FlowFixMe[method-unbinding]\n    'number-format': NumberFormat,\n    'object': Assertion,\n    // $FlowFixMe[method-unbinding]\n    'slice': Slice,\n    // $FlowFixMe[method-unbinding]\n    'step': Step,\n    'string': Assertion,\n    // $FlowFixMe[method-unbinding]\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    // $FlowFixMe[method-unbinding]\n    'var': Var,\n    // $FlowFixMe[method-unbinding]\n    'within': Within,\n    // $FlowFixMe[method-unbinding]\n    'distance': Distance\n};\n\nfunction rgba(ctx: EvaluationContext, [r, g, b, a]: Array<Expression>) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction hsla(ctx: EvaluationContext, [h, s, l, a]: Array<Expression>) {\n    h = h.evaluate(ctx);\n    s = s.evaluate(ctx);\n    l = l.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateHSLA(h, s, l, alpha);\n    if (error) throw new RuntimeError(error);\n    const colorFunction = `hsla(${h}, ${s}%, ${l}%, ${alpha})`;\n    const color = Color.parse(colorFunction);\n    if (!color) throw new RuntimeError(`Failed to parse HSLA color: ${colorFunction}`);\n    return color;\n}\n\nfunction has(key: string, obj: {[string]: any}): boolean {\n    return key in obj;\n}\n\nfunction get(key: string, obj: {[string]: any}) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction coerceValue(type: 'string' | 'number' | 'boolean' | 'color', value: any): any {\n    switch (type) {\n    case 'string': return String(value);\n    case 'number': return +value;\n    case 'boolean': return !!value;\n    case 'color': return Color.parse(value);\n    }\n    return value;\n}\n\nfunction clampToAllowedNumber(value: number, min: number | void, max: number | void, step: number | void): number {\n    if (step !== undefined) {\n        value = step * Math.round(value / step);\n    }\n    if (min !== undefined && value < min) {\n        value = min;\n    }\n    if (max !== undefined && value > max) {\n        value = max;\n    }\n    return value;\n}\n\nconst FQIDSeparator = '\\u001F';\n\nfunction getConfig(ctx: EvaluationContext, key: string, scope: ?string) {\n    // Create a fully qualified key from the requested scope\n    // and the scope from the current evaluation context\n    key = [key, scope, ctx.scope].filter(Boolean).join(FQIDSeparator);\n\n    const config = ctx.getConfig(key);\n    if (!config) return null;\n\n    const {type, value, values, minValue, maxValue, stepValue} = config;\n\n    const defaultValue = config.default.evaluate(ctx);\n\n    let result = defaultValue;\n    if (value) {\n        // temporarily override scope to parent to evaluate config expressions passed from the parent\n        const originalScope = ctx.scope;\n        ctx.scope = (originalScope || '').split(FQIDSeparator).slice(1).join(FQIDSeparator);\n        result = value.evaluate(ctx);\n        ctx.scope = originalScope;\n    }\n\n    if (type) result = coerceValue(type, result);\n\n    if (value !== undefined && result !== undefined && values && !values.includes(result)) {\n        result = defaultValue;\n        if (type) result = coerceValue(type, result);\n    }\n\n    if (result !== undefined && (minValue !== undefined || maxValue !== undefined || stepValue !== undefined)) {\n        if (typeof result === 'number') {\n            result = clampToAllowedNumber(result, minValue, maxValue, stepValue);\n        } else if (Array.isArray(result)) {\n            result = result.map((item) => typeof item === 'number' ? clampToAllowedNumber(item, minValue, maxValue, stepValue) : item);\n        }\n    }\n\n    return result;\n}\n\nfunction binarySearch(v: any, a: {[number]: any}, i: number, j: number) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type: Type): Varargs {\n    return {type};\n}\n\nfunction hashString(str: string) {\n    let hash = 0;\n    if (str.length === 0) {\n        return hash;\n    }\n    for (let i = 0; i < str.length; i++) {\n        const char = str.charCodeAt(i);\n        hash = ((hash << 5) - hash) + char;\n        hash = hash & hash;\n    }\n    return hash;\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'hsl': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        hsla\n    ],\n    'hsla': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        hsla\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'config': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => getConfig(ctx, key.evaluate(ctx))\n            ], [\n                [StringType, StringType],\n                (ctx, [key, scope]) => getConfig(ctx, key.evaluate(ctx), scope.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'measure-light': [\n        NumberType,\n        [StringType],\n        (ctx, [s]) => ctx.measureLight(s.evaluate(ctx))\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'raster-value': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.rasterValue || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k: any).value] === (v: any).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v: any).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v: any).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k: any).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v: any).value.indexOf(ctx.properties()[(k: any).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k: any).value], (v: any).value, 0, (v: any).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ],\n    'random': [\n        NumberType,\n        [NumberType, NumberType, ValueType],\n        (ctx, args) => {\n            const [min, max, seed] = args.map(arg => arg.evaluate(ctx));\n            if (min > max) {\n                return min;\n            }\n            if (min === max) {\n                return min;\n            }\n            let seedVal;\n            if (typeof seed === 'string') {\n                seedVal = hashString(seed);\n            } else if (typeof seed === 'number') {\n                seedVal = seed;\n            } else {\n                throw new RuntimeError(`Invalid seed input: ${seed}`);\n            }\n            const random = mulberry32(seedVal)();\n            return min + random * (max - min);\n        }\n    ],\n});\n\nexport default expressions;\n","// @flow\n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nexport type Result<T, E> =\n    | {| result: 'success', value: T |}\n    | {| result: 'error', value: E |};\n\nexport function success<T, E>(value: T): Result<T, E> {\n    return {result: 'success', value};\n}\n\nexport function error<T, E>(value: E): Result<T, E> {\n    return {result: 'error', value};\n}\n","// @flow\n\nimport type {ExpressionSpecification, StylePropertySpecification} from '../style-spec.js';\n\ntype ExpressionParameter = ExpressionSpecification['parameters'][number];\n\nfunction expressionHasParameter(expression: ?ExpressionSpecification, parameter: ExpressionParameter): boolean {\n    return !!expression && !!expression.parameters && expression.parameters.indexOf(parameter) > -1;\n}\n\nexport function supportsPropertyExpression(spec: StylePropertySpecification): boolean {\n    return spec['property-type'] === 'data-driven';\n}\n\nexport function supportsLightExpression(spec: StylePropertySpecification): boolean {\n    return expressionHasParameter(spec.expression, 'measure-light');\n}\n\nexport function supportsZoomExpression(spec: StylePropertySpecification): boolean {\n    return expressionHasParameter(spec.expression, 'zoom');\n}\n\nexport function supportsInterpolation(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","// @noflow\n\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {\n    supportsPropertyExpression,\n    supportsZoomExpression,\n    supportsLightExpression,\n    supportsInterpolation\n} from '../util/properties.js';\n\nimport type {Type, EvaluationKind} from './types.js';\nimport type {Value} from './values.js';\nimport type {Expression} from './expression.js';\nimport type {StylePropertySpecification} from '../style-spec.js';\nimport type {Result} from '../util/result.js';\nimport type {InterpolationType} from './definitions/interpolate.js';\nimport type {PropertyValueSpecification} from '../types.js';\nimport type {FormattedSection} from './types/formatted.js';\nimport type Point from '@mapbox/point-geometry';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type {FeatureDistanceData} from '../feature_filter/index.js';\nimport type {ConfigOptions} from '../../style/properties.js';\n\nexport interface Feature {\n    +type: 1 | 2 | 3 | 'Unknown' | 'Point' | 'LineString' | 'Polygon';\n    +id?: number | null;\n    +properties: {[_: string]: any};\n    +patterns?: {[_: string]: string};\n    +geometry?: Array<Array<Point>>;\n}\n\nexport type FeatureState = {[_: string]: any};\n\nexport interface GlobalProperties {\n    zoom: number,\n    pitch?: number,\n    heatmapDensity?: number,\n    lineProgress?: number,\n    rasterValue?: number,\n    skyRadialProgress?: number,\n    +isSupportedScript?: (_: string) => boolean,\n    accumulated?: Value,\n    brightness?: number\n}\n\nexport class StyleExpression {\n    expression: Expression;\n\n    _evaluator: EvaluationContext;\n    _defaultValue: Value;\n    _warningHistory: {[key: string]: boolean};\n    _enumValues: ?{[_: string]: any};\n\n    constructor(expression: Expression, propertySpec: ?StylePropertySpecification, scope?: ?string, options?: ?ConfigOptions) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext(scope, options);\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression: mixed): boolean {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression: mixed, propertySpec: ?StylePropertySpecification, scope?: ?string, options?: ?ConfigOptions): Result<StyleExpression, Array<ParsingError>> {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined, undefined, undefined, scope, options);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec, scope, options));\n}\n\nexport class ZoomConstantExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    isStateDependent: boolean;\n    isConfigDependent: boolean;\n    _styleExpression: StyleExpression;\n    isLightConstant: ?boolean;\n\n    constructor(kind: Kind, expression: StyleExpression, isLightConstant: ?boolean) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isLightConstant = isLightConstant;\n        this.isStateDependent = kind !== ('constant': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n        this.isConfigDependent = !isConstant.isConfigConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    zoomStops: Array<number>;\n    isStateDependent: boolean;\n    isLightConstant: ?boolean;\n    isConfigDependent: boolean;\n\n    _styleExpression: StyleExpression;\n    interpolationType: ?InterpolationType;\n\n    constructor(kind: Kind, expression: StyleExpression, zoomStops: Array<number>, interpolationType?: InterpolationType, isLightConstant: ?boolean) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n        this.isLightConstant = isLightConstant;\n        this.isConfigDependent = !isConstant.isConfigConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input: number, lower: number, upper: number): number {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\nexport type ConstantExpression = interface {\n    kind: 'constant',\n    isConfigDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>) => any,\n}\n\nexport type SourceExpression = interface {\n    kind: 'source',\n    isStateDependent: boolean,\n    isLightConstant: ?boolean;\n    isConfigDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection) => any,\n};\n\nexport type CameraExpression = interface {\n    kind: 'camera',\n    isStateDependent: boolean,\n    isConfigDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>,\n    interpolationType: ?InterpolationType\n};\n\nexport interface CompositeExpression {\n    kind: 'composite';\n    isStateDependent: boolean;\n    isLightConstant: ?boolean;\n    isConfigDependent: boolean;\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection) => any;\n    +interpolationFactor: (input: number, lower: number, upper: number) => number;\n    zoomStops: Array<number>;\n    interpolationType: ?InterpolationType;\n}\n\nexport type StylePropertyExpression =\n    | ConstantExpression\n    | SourceExpression\n    | CameraExpression\n    | CompositeExpression;\n\nexport function createPropertyExpression(expression: mixed, propertySpec: StylePropertySpecification, scope?: ?string, options?: ?ConfigOptions): Result<StylePropertyExpression, Array<ParsingError>> {\n    expression = createExpression(expression, propertySpec, scope, options);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const isLightConstant = isConstant.isGlobalPropertyConstant(parsed, ['measure-light']);\n    if (!isLightConstant && !supportsLightExpression(propertySpec)) {\n        return error([new ParsingError('', 'measure-light expression not supported')]);\n    }\n\n    const canRelaxZoomRestriction = propertySpec.expression && propertySpec.expression.relaxZoomRestriction;\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant && !canRelaxZoomRestriction) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression, or in the properties of atmosphere.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            // $FlowFixMe[method-unbinding]\n            (new ZoomConstantExpression('constant', expression.value, isLightConstant): ConstantExpression) :\n            // $FlowFixMe[method-unbinding]\n            (new ZoomConstantExpression('source', expression.value, isLightConstant): SourceExpression));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        // $FlowFixMe[method-unbinding]\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType, isLightConstant): CameraExpression) :\n        // $FlowFixMe[method-unbinding]\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType, isLightConstant): CompositeExpression));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction<T> {\n    _parameters: PropertyValueSpecification<T>;\n    _specification: StylePropertySpecification;\n\n    kind: EvaluationKind;\n    evaluate: (globals: GlobalProperties, feature?: Feature) => any;\n    interpolationFactor: ?(input: number, lower: number, upper: number) => number;\n    zoomStops: ?Array<number>;\n\n    constructor(parameters: PropertyValueSpecification<T>, specification: StylePropertySpecification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized: {_parameters: PropertyValueSpecification<T>, _specification: StylePropertySpecification}): StylePropertyFunction<T> {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input: StylePropertyFunction<T>): {_parameters: PropertyValueSpecification<T>, _specification: StylePropertySpecification} {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression<T>(value: PropertyValueSpecification<T>, specification: StylePropertySpecification, scope?: ?string, options?: ?ConfigOptions): StylePropertyExpression {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification): any);\n\n    } else if (isExpression(value) || (Array.isArray(value) && value.length > 0)) {\n        const expression = createPropertyExpression(value, specification, scope, options);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant: any = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            isConfigDependent: false,\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression: Expression): Step | Interpolate | ParsingError | null {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec: StylePropertySpecification): Type {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec: StylePropertySpecification): Value {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport type {StylePropertySpecification} from '../style-spec.js';\nimport type {ExpressionSpecification} from '../types.js';\n\ntype Stop = [{zoom: number, value: string | number | boolean}, mixed];\n\ntype FunctionParameters = {\n    stops: Array<Stop>;\n    base: number;\n    property: string;\n    type: 'identity' | 'exponential' | 'interval' | 'categorical';\n    colorSpace: 'rgb' | 'lab' | 'hcl';\n    default: mixed;\n};\n\nfunction convertLiteral(value: mixed) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters: FunctionParameters, propertySpec: StylePropertySpecification): ExpressionSpecification {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters: FunctionParameters, propertySpec: StylePropertySpecification): Array<mixed> {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters: FunctionParameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters: FunctionParameters, propertySpec: StylePropertySpecification, stops: Array<Stop>) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a: mixed, b: mixed) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters: FunctionParameters, propertySpec: StylePropertySpecification) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters: FunctionParameters, propertySpec: StylePropertySpecification, stops: Array<Stop>) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters: FunctionParameters, propertySpec: StylePropertySpecification, stops: Array<Stop>, input: Array<string> = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression: ExpressionSpecification) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve: ExpressionSpecification, input: mixed, output: mixed, isStep: boolean) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters: FunctionParameters, propertySpec: StylePropertySpecification): string {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression: any).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s: string): string | ExpressionSpecification {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","// @flow\n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value: mixed): mixed {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value: mixed): mixed {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue: { [key: string]: mixed } = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","// @flow\n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\nimport type {GlobalProperties, Feature} from '../expression/index.js';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type Point from '@mapbox/point-geometry';\n\nexport type FeatureDistanceData = {bearing: [number, number], center: [number, number], scale: number};\nexport type FilterExpression = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData) => boolean;\nexport type FeatureFilter = {filter: FilterExpression, dynamicFilter?: FilterExpression, needGeometry: boolean, needFeature: boolean};\n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter: any): boolean {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter: any, layerType?: string = 'fill'): FeatureFilter {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        // $FlowFixMe[incompatible-call]\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter: any): string[] | string | boolean);\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc: any): FilterExpression);\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter: any): any {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression: any): any {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter: any) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter: any): boolean {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression: string): boolean {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression: any): any {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a: number, b: number) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter: Array<any> | boolean) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within' || filter[0] === 'distance') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter: ?Array<any>): mixed {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters: Array<Array<any>>) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property: string, values: Array<any>) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property: string) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter: mixed) {\n    return ['!', filter];\n}\n","// @flow\n\nimport {isExpressionFilter} from './index.js';\n\nimport type {FilterSpecification} from '../types.js';\n\ntype ExpectedTypes = {[_: string]: 'string' | 'number' | 'boolean'};\n\n/**\n * Convert the given legacy filter to (the JSON representation of) an\n * equivalent expression\n * @private\n */\nexport default function convertFilter(filter: FilterSpecification): mixed {\n    return _convertFilter(filter, {});\n}\n\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evalaution error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nfunction _convertFilter(filter: FilterSpecification, expectedTypes: ExpectedTypes): mixed {\n    if (isExpressionFilter(filter)) { return filter; }\n\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n\n    let converted;\n\n    if (\n        op === '==' ||\n        op === '!=' ||\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>='\n    ) {\n        const [, property, value] = (filter: any);\n        converted = convertComparisonOp(property, value, op, expectedTypes);\n    } else if (op === 'any') {\n        const children = (filter: any).slice(1).map(f => {\n            const types = {};\n            const child = _convertFilter(f, types);\n            const typechecks = runtimeTypeChecks(types);\n            return typechecks === true ? child : ['case', typechecks, child, false];\n        });\n        return ['any'].concat(children);\n    } else if (op === 'all') {\n        const children = (filter: any).slice(1).map(f => _convertFilter(f, expectedTypes));\n        return children.length > 1 ? ['all'].concat(children) : [].concat(...children);\n    } else if (op === 'none') {\n        return ['!', _convertFilter(['any'].concat((filter: any).slice(1)), {})];\n    } else if (op === 'in') {\n        converted = convertInOp((filter[1]: any), filter.slice(2));\n    } else if (op === '!in') {\n        converted = convertInOp((filter[1]: any), filter.slice(2), true);\n    } else if (op === 'has') {\n        converted = convertHasOp((filter[1]: any));\n    } else if (op === '!has') {\n        converted = ['!', convertHasOp((filter[1]: any))];\n    } else {\n        converted = true;\n    }\n\n    return converted;\n}\n\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes: ExpectedTypes) {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0) return true;\n    if (conditions.length === 1) return conditions[0];\n    return ['all'].concat(conditions);\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string, expectedTypes: ?ExpectedTypes) {\n    let get;\n    if (property === '$type') {\n        return [op, ['geometry-type'], value];\n    } else if (property === '$id') {\n        get = ['id'];\n    } else {\n        get = ['get', property];\n    }\n\n    if (expectedTypes && value !== null) {\n        const type = ((typeof value): any);\n        expectedTypes[property] = type;\n    }\n\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property], // missing property != null for legacy filters\n            ['==', get, null]\n        ];\n    } else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]], // missing property != null for legacy filters\n            ['!=', get, null]\n        ];\n    }\n\n    return [op, get, value];\n}\n\nfunction convertInOp(property: string, values: Array<any>, negate: boolean = false) {\n    if (values.length === 0) return negate;\n\n    let get;\n    if (property === '$type') {\n        get = ['geometry-type'];\n    } else if (property === '$id') {\n        get = ['id'];\n    } else {\n        get = ['get', property];\n    }\n\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        // Match expressions must have unique values.\n        const uniqueValues = values.sort().filter((v, i) => i === 0 || values[i - 1] !== v);\n        return ['match', get, uniqueValues, !negate, negate];\n    }\n\n    return [ negate ? 'all' : 'any' ].concat(\n        values.map(v => [negate ? '!=' : '==', get, v])\n    );\n}\n\nfunction convertHasOp(property: string) {\n    if (property === '$type') {\n        return true;\n    } else if (property === '$id') {\n        return ['!=', ['id'], null];\n    } else {\n        return ['has', property];\n    }\n}\n","// @flow\n\nimport {\n    eachLayer,\n    eachProperty\n} from '../visit.js';\nimport {isExpression} from '../expression/index.js';\nimport convertFunction, {convertTokenString} from '../function/convert.js';\nimport convertFilter from '../feature_filter/convert.js';\n\nimport type {StyleSpecification} from '../types.js';\n\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n */\nexport default function(style: StyleSpecification): StyleSpecification {\n    const converted = [];\n\n    eachLayer(style, (layer) => {\n        if (layer.filter) {\n            layer.filter = (convertFilter(layer.filter): any);\n        }\n    });\n\n    eachProperty(style, {paint: true, layout: true}, ({path, value, reference, set}) => {\n        if (isExpression(value)) return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            // $FlowFixMe[prop-missing]\n            // $FlowFixMe[incompatible-call]\n            // $FlowFixMe[incompatible-variance]\n            set(convertFunction(value, reference));\n            converted.push(path.join('.'));\n        } else if (reference.tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n\n    return style;\n}\n\n","// @noflow\n\nimport migrateToV8 from './migrate/v8.js';\nimport migrateToExpressions from './migrate/expressions.js';\n\n/**\n * Migrate a Mapbox GL Style to the latest version.\n *\n * @private\n * @alias migrate\n * @param {object} style a Mapbox GL Style\n * @returns {Object} a migrated style\n * @example\n * var fs = require('fs');\n * var migrate = require('mapbox-gl-style-spec').migrate;\n * var style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nexport default function(style) {\n    let migrated = false;\n\n    if (style.version === 7) {\n        style = migrateToV8(style);\n        migrated = true;\n    }\n\n    if (style.version === 8) {\n        migrated = migrateToExpressions(style);\n        migrated = true;\n    }\n\n    if (!migrated) {\n        throw new Error('cannot migrate from', style.version);\n    }\n\n    return style;\n}\n","// @noflow\n\nexport default function (style) {\n    const styleIDs = [];\n    const sourceIDs = [];\n    const compositedSourceLayers = [];\n\n    for (const id in style.sources) {\n        const source = style.sources[id];\n\n        if (source.type !== \"vector\")\n            continue;\n\n        const match = /^mapbox:\\/\\/(.*)/.exec(source.url);\n        if (!match)\n            continue;\n\n        styleIDs.push(id);\n        sourceIDs.push(match[1]);\n    }\n\n    if (styleIDs.length < 2)\n        return style;\n\n    styleIDs.forEach((id) => {\n        delete style.sources[id];\n    });\n\n    const compositeID = sourceIDs.join(\",\");\n\n    style.sources[compositeID] = {\n        \"type\": \"vector\",\n        \"url\": `mapbox://${compositeID}`\n    };\n\n    style.layers.forEach((layer) => {\n        if (styleIDs.indexOf(layer.source) >= 0) {\n            layer.source = compositeID;\n\n            if ('source-layer' in layer) {\n                if (compositedSourceLayers.indexOf(layer['source-layer']) >= 0) {\n                    throw new Error('Conflicting source layer names');\n                } else {\n                    compositedSourceLayers.push(layer['source-layer']);\n                }\n            }\n        }\n    });\n\n    return style;\n}\n","// @flow\nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n","// @flow\n\nimport refProperties from './util/ref_properties.js';\n\nimport type {LayerSpecification} from './types.js';\n\nfunction deref(layer: LayerSpecification, parent: LayerSpecification): LayerSpecification {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent: any)[k];\n        }\n    });\n\n    return ((result: any): LayerSpecification);\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers: Array<LayerSpecification>): Array<LayerSpecification> {\n    layers = layers.slice();\n\n    const map: Object = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]: any).ref]);\n        }\n    }\n\n    return layers;\n}\n","// @flow\n\n/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a: ?mixed, b: ?mixed): boolean {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length) return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i])) return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object')) return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length) return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key])) return false;\n        }\n        return true;\n    }\n    return a === b;\n}\n\nexport default deepEqual;\n","// @flow\n\nimport isEqual from './util/deep_equal.js';\n\nimport type {StyleSpecification, ImportSpecification, SourceSpecification, LayerSpecification} from './types.js';\n\ntype Sources = { [string]: SourceSpecification };\n\ntype Command = {\n    command: string;\n    args: Array<any>;\n};\n\nexport const operations: {[_: string]: string} = {\n\n    /*\n     * { command: 'setStyle', args: [stylesheet] }\n     */\n    setStyle: 'setStyle',\n\n    /*\n     * { command: 'addLayer', args: [layer, 'beforeLayerId'] }\n     */\n    addLayer: 'addLayer',\n\n    /*\n     * { command: 'removeLayer', args: ['layerId'] }\n     */\n    removeLayer: 'removeLayer',\n\n    /*\n     * { command: 'setPaintProperty', args: ['layerId', 'prop', value] }\n     */\n    setPaintProperty: 'setPaintProperty',\n\n    /*\n     * { command: 'setLayoutProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayoutProperty: 'setLayoutProperty',\n\n    /*\n     * { command: 'setSlot', args: ['layerId', slot] }\n     */\n    setSlot: 'setSlot',\n\n    /*\n     * { command: 'setFilter', args: ['layerId', filter] }\n     */\n    setFilter: 'setFilter',\n\n    /*\n     * { command: 'addSource', args: ['sourceId', source] }\n     */\n    addSource: 'addSource',\n\n    /*\n     * { command: 'removeSource', args: ['sourceId'] }\n     */\n    removeSource: 'removeSource',\n\n    /*\n     * { command: 'setGeoJSONSourceData', args: ['sourceId', data] }\n     */\n    setGeoJSONSourceData: 'setGeoJSONSourceData',\n\n    /*\n     * { command: 'setLayerZoomRange', args: ['layerId', 0, 22] }\n     */\n    setLayerZoomRange: 'setLayerZoomRange',\n\n    /*\n     * { command: 'setLayerProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayerProperty: 'setLayerProperty',\n\n    /*\n     * { command: 'setCenter', args: [[lon, lat]] }\n     */\n    setCenter: 'setCenter',\n\n    /*\n     * { command: 'setZoom', args: [zoom] }\n     */\n    setZoom: 'setZoom',\n\n    /*\n     * { command: 'setBearing', args: [bearing] }\n     */\n    setBearing: 'setBearing',\n\n    /*\n     * { command: 'setPitch', args: [pitch] }\n     */\n    setPitch: 'setPitch',\n\n    /*\n     * { command: 'setSprite', args: ['spriteUrl'] }\n     */\n    setSprite: 'setSprite',\n\n    /*\n     * { command: 'setGlyphs', args: ['glyphsUrl'] }\n     */\n    setGlyphs: 'setGlyphs',\n\n    /*\n     * { command: 'setTransition', args: [transition] }\n     */\n    setTransition: 'setTransition',\n\n    /*\n     * { command: 'setLighting', args: [lightProperties] }\n     */\n    setLight: 'setLight',\n\n    /*\n     * { command: 'setTerrain', args: [terrainProperties] }\n     */\n    setTerrain: 'setTerrain',\n\n    /*\n     *  { command: 'setFog', args: [fogProperties] }\n     */\n    setFog: 'setFog',\n\n    /*\n     *  { command: 'setCamera', args: [cameraProperties] }\n     */\n    setCamera: 'setCamera',\n\n    /*\n     *  { command: 'setLights', args: [{light-3d},...] }\n     */\n    setLights: 'setLights',\n\n    /*\n     *  { command: 'setProjection', args: [projectionProperties] }\n     */\n    setProjection: 'setProjection',\n\n    /*\n     *  { command: 'addImport', args: [import] }\n     */\n    addImport: 'addImport',\n\n    /*\n     *  { command: 'removeImport', args: [importId] }\n     */\n    removeImport: 'removeImport',\n\n    /*\n     *  { command: 'setImportUrl', args: [importId, styleUrl] }\n     */\n    setImportUrl: 'setImportUrl',\n\n    /*\n     *  { command: 'setImportData', args: [importId, stylesheet] }\n     */\n    setImportData: 'setImportData',\n\n    /*\n     *  { command: 'setImportConfig', args: [importId, config] }\n     */\n    setImportConfig: 'setImportConfig'\n};\n\nfunction addSource(sourceId: string, after: Sources, commands: Array<Command>) {\n    commands.push({command: operations.addSource, args: [sourceId, after[sourceId]]});\n}\n\nfunction removeSource(sourceId: string, commands: Array<Command>, sourcesRemoved: {[string]: true}) {\n    commands.push({command: operations.removeSource, args: [sourceId]});\n    sourcesRemoved[sourceId] = true;\n}\n\nfunction updateSource(sourceId: string, after: Sources, commands: Array<Command>, sourcesRemoved: {[string]: true}) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\n\nfunction canUpdateGeoJSON(before: Sources, after: Sources, sourceId: string) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!before[sourceId].hasOwnProperty(prop)) continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!after[sourceId].hasOwnProperty(prop)) continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction diffSources(before: Sources, after: Sources, commands: Array<Command>, sourcesRemoved: {[string]: true}) {\n    before = before || {};\n    after = after || {};\n\n    let sourceId;\n\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!before.hasOwnProperty(sourceId)) continue;\n        if (!after.hasOwnProperty(sourceId)) {\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!after.hasOwnProperty(sourceId)) continue;\n        const source = after[sourceId];\n        if (!before.hasOwnProperty(sourceId)) {\n            addSource(sourceId, after, commands);\n        } else if (!isEqual(before[sourceId], source)) {\n            if (before[sourceId].type === 'geojson' && source.type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                commands.push({command: operations.setGeoJSONSourceData, args: [sourceId, source.data]});\n            } else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\n\nfunction diffLayerPropertyChanges(before: any, after: any, commands: Array<Command>, layerId: string, klass: ?string, command: string) {\n    before = before || {};\n    after = after || {};\n\n    let prop;\n\n    for (prop in before) {\n        if (!before.hasOwnProperty(prop)) continue;\n        if (!isEqual(before[prop], after[prop])) {\n            commands.push({command, args: [layerId, prop, after[prop], klass]});\n        }\n    }\n    for (prop in after) {\n        if (!after.hasOwnProperty(prop) || before.hasOwnProperty(prop)) continue;\n        if (!isEqual(before[prop], after[prop])) {\n            commands.push({command, args: [layerId, prop, after[prop], klass]});\n        }\n    }\n}\n\nfunction pluckId<T: {id: string}>(item: T): string {\n    return item.id;\n}\n\nfunction indexById<T: {id: string}>(group: {[string]: T}, item: T): {[id: string]: T} {\n    group[item.id] = item;\n    return group;\n}\n\nfunction diffLayers(before: Array<LayerSpecification>, after: Array<LayerSpecification>, commands: Array<Command>) {\n    before = before || [];\n    after = after || [];\n\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n\n    // layers that have been added do not need to be diffed\n    const clean: Object = Object.create(null);\n\n    let i, d, layerId, beforeLayer: LayerSpecification, afterLayer: LayerSpecification, insertBeforeLayerId, prop;\n\n    // remove layers\n    for (i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        if (!afterIndex.hasOwnProperty(layerId)) {\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n\n    // add/reorder layers\n    for (i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n\n        if (tracker[tracker.length - 1 - i] === layerId) continue;\n\n        if (beforeIndex.hasOwnProperty(layerId)) {\n            // remove the layer before we insert at the correct position\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        commands.push({command: operations.addLayer, args: [afterIndex[layerId], insertBeforeLayerId]});\n        tracker.splice(tracker.length - i, 0, layerId);\n        clean[layerId] = true;\n    }\n\n    // update layers\n    for (i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || isEqual(beforeLayer, afterLayer)) continue;\n\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        // $FlowFixMe[prop-missing] - there is no `source-layer` in background and sky layers\n        if (!isEqual(beforeLayer.source, afterLayer.source) || !isEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !isEqual(beforeLayer.type, afterLayer.type)) {\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            commands.push({command: operations.addLayer, args: [afterLayer, insertBeforeLayerId]});\n            continue;\n        }\n\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, operations.setLayoutProperty);\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, operations.setPaintProperty);\n        if (!isEqual(beforeLayer.slot, afterLayer.slot)) {\n            commands.push({command: operations.setSlot, args: [layerId, afterLayer.slot]});\n        }\n        if (!isEqual(beforeLayer.filter, afterLayer.filter)) {\n            commands.push({command: operations.setFilter, args: [layerId, afterLayer.filter]});\n        }\n        if (!isEqual(beforeLayer.minzoom, afterLayer.minzoom) || !isEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            commands.push({command: operations.setLayerZoomRange, args: [layerId, afterLayer.minzoom, afterLayer.maxzoom]});\n        }\n\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!beforeLayer.hasOwnProperty(prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom' || prop === 'slot') continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                commands.push({command: operations.setLayerProperty, args: [layerId, prop, afterLayer[prop]]});\n            }\n        }\n        for (prop in afterLayer) {\n            if (!afterLayer.hasOwnProperty(prop) || beforeLayer.hasOwnProperty(prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom' || prop === 'slot') continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                commands.push({command: operations.setLayerProperty, args: [layerId, prop, afterLayer[prop]]});\n            }\n        }\n    }\n}\n\nexport function diffImports(before: Array<ImportSpecification> = [], after: Array<ImportSpecification> = [], commands: Array<Command>) {\n    before = before || [];\n    after = after || [];\n\n    // order imports by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n\n    // index imports by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n\n    // track order of imports as if they have been mutated\n    const tracker = beforeOrder.slice();\n\n    let i, d, importId, insertBefore;\n\n    // remove imports\n    for (i = 0, d = 0; i < beforeOrder.length; i++) {\n        importId = beforeOrder[i];\n        if (!afterIndex.hasOwnProperty(importId)) {\n            commands.push({command: operations.removeImport, args: [importId]});\n            tracker.splice(tracker.indexOf(importId, d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n\n    // add/reorder imports\n    for (i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing import\n        importId = afterOrder[afterOrder.length - 1 - i];\n\n        if (tracker[tracker.length - 1 - i] === importId) continue;\n\n        if (beforeIndex.hasOwnProperty(importId)) {\n            // remove the import before we insert at the correct position\n            commands.push({command: operations.removeImport, args: [importId]});\n            tracker.splice(tracker.lastIndexOf(importId, tracker.length - d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n\n        // add import at correct position\n        insertBefore = tracker[tracker.length - i];\n        commands.push({command: operations.addImport, args: [afterIndex[importId], insertBefore]});\n        tracker.splice(tracker.length - i, 0, importId);\n    }\n\n    // update imports\n    for (const afterImport of after) {\n        const beforeImport = beforeIndex[afterImport.id];\n        if (!beforeImport || isEqual(beforeImport, afterImport)) continue;\n\n        if (!isEqual(beforeImport.config, afterImport.config)) {\n            commands.push({command: operations.setImportConfig, args: [afterImport.id, afterImport.config]});\n        }\n\n        if (!isEqual(beforeImport.url, afterImport.url)) {\n            commands.push({command: operations.setImportUrl, args: [afterImport.id, afterImport.url]});\n        }\n\n        const beforeData = beforeImport && beforeImport.data;\n        const afterData = afterImport.data;\n\n        if (!isEqual(beforeData, afterData)) {\n            commands.push({command: operations.setImportData, args: [afterImport.id, afterData]});\n        }\n    }\n}\n\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the mapbox-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nexport default function diffStyles(before: StyleSpecification, after: StyleSpecification): Array<Command> {\n    if (!before) return [{command: operations.setStyle, args: [after]}];\n\n    let commands: Array<Command> = [];\n\n    try {\n        // Handle changes to top-level properties\n        if (!isEqual(before.version, after.version)) {\n            return [{command: operations.setStyle, args: [after]}];\n        }\n        if (!isEqual(before.center, after.center)) {\n            commands.push({command: operations.setCenter, args: [after.center]});\n        }\n        if (!isEqual(before.zoom, after.zoom)) {\n            commands.push({command: operations.setZoom, args: [after.zoom]});\n        }\n        if (!isEqual(before.bearing, after.bearing)) {\n            commands.push({command: operations.setBearing, args: [after.bearing]});\n        }\n        if (!isEqual(before.pitch, after.pitch)) {\n            commands.push({command: operations.setPitch, args: [after.pitch]});\n        }\n        if (!isEqual(before.sprite, after.sprite)) {\n            commands.push({command: operations.setSprite, args: [after.sprite]});\n        }\n        if (!isEqual(before.glyphs, after.glyphs)) {\n            commands.push({command: operations.setGlyphs, args: [after.glyphs]});\n        }\n        // Handle changes to `imports` before other mergable top-level properties\n        if (!isEqual(before.imports, after.imports)) {\n            diffImports(before.imports, after.imports, commands);\n        }\n        if (!isEqual(before.transition, after.transition)) {\n            commands.push({command: operations.setTransition, args: [after.transition]});\n        }\n        if (!isEqual(before.light, after.light)) {\n            commands.push({command: operations.setLight, args: [after.light]});\n        }\n        if (!isEqual(before.fog, after.fog)) {\n            commands.push({command: operations.setFog, args: [after.fog]});\n        }\n        if (!isEqual(before.projection, after.projection)) {\n            commands.push({command: operations.setProjection, args: [after.projection]});\n        }\n        if (!isEqual(before.lights, after.lights)) {\n            commands.push({command: operations.setLights, args: [after.lights]});\n        }\n        if (!isEqual(before.camera, after.camera)) {\n            commands.push({command: operations.setCamera, args: [after.camera]});\n        }\n\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if (layer.source && sourcesRemoved[layer.source]) {\n                    commands.push({command: operations.removeLayer, args: [layer.id]});\n                } else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n\n        // Remove the terrain if the source for that terrain is being removed\n        let beforeTerrain = before.terrain;\n        if (beforeTerrain) {\n            if (sourcesRemoved[beforeTerrain.source]) {\n                commands.push({command: operations.setTerrain, args: [undefined]});\n                beforeTerrain = undefined;\n            }\n        }\n\n        commands = commands.concat(removeOrAddSourceCommands);\n\n        // Even though terrain is a top-level property\n        // Its like a layer in the sense that it depends on a source being present.\n        if (!isEqual(beforeTerrain, after.terrain)) {\n            commands.push({command: operations.setTerrain, args: [after.terrain]});\n        }\n\n        // Handle changes to `layers`\n        diffLayers(beforeLayers, after.layers, commands);\n    } catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{command: operations.setStyle, args: [after]}];\n    }\n\n    return commands;\n}\n","// @flow\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\n\nexport default class ValidationError {\n    message: string;\n    identifier: ?string;\n    line: ?number;\n\n    constructor(key: ?string, value: ?{ __line__: number }, message: string, identifier: ?string) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier) this.identifier = identifier;\n\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n\nexport class ValidationWarning extends ValidationError {}\n","// @flow\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\n\nexport default class ParsingError {\n    message: string;\n    error: Error;\n    line: number;\n\n    constructor(error: Error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n","// @flow\n\nimport {default as ValidationError, ValidationWarning} from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validateSpec from './validate.js';\n\nimport type {ValidationOptions} from './validate.js';\n\ntype Options = ValidationOptions & {\n    objectElementValidators?: Function;\n};\n\nexport default function validateObject(options: Options): Array<ValidationError> {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    let errors = [];\n\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        const elementSpec = elementSpecs[elementSpecKey] || elementSpecs['*'];\n\n        let validateElement;\n        if (elementValidators[elementSpecKey]) {\n            validateElement = elementValidators[elementSpecKey];\n        } else if (elementSpecs[elementSpecKey]) {\n            validateElement = validateSpec;\n        } else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        } else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        }\n\n        if (!validateElement) {\n            errors.push(new ValidationWarning(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey\n        // $FlowFixMe[extra-arg]\n        }, object));\n    }\n\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n\n    return errors;\n}\n","// @flow\n\nimport extend from '../util/extend.js';\nimport validateStyle from './validate_style.js';\nimport validateObject from './validate_object.js';\nimport ValidationError from '../error/validation_error.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateImport(options: ValidationOptions): ValidationError[] {\n    const {value, styleSpec} = options;\n    const {data, ...importSpec} = value;\n\n    // Preserve __line__ from the value\n    Object.defineProperty(importSpec, '__line__', {\n        value: value.__line__,\n        enumerable: false\n    });\n\n    let errors = validateObject(extend({}, options, {\n        value: importSpec,\n        valueSpec: styleSpec.import\n    }));\n\n    // Empty string is reserved for the root style id\n    if (unbundle(importSpec.id) === '') {\n        const key = `${options.key}.id`;\n        errors.push(new ValidationError(key, importSpec, `import id can't be an empty string`));\n    }\n\n    if (data) {\n        const key = `${options.key}.data`;\n        errors = errors.concat(validateStyle(data, styleSpec, {key}));\n    }\n\n    return errors;\n}\n","// @flow\n\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\nimport ValidationError from '../error/validation_error.js';\n\nimport type {ValidationOptions} from './validate.js';\n\ntype Options = ValidationOptions & {\n    arrayElementValidator: Function;\n};\n\nexport default function validateArray(options: Options): Array<ValidationError> {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validate;\n\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n\n    let arrayElementSpec = {\n        \"type\": arraySpec.value,\n        \"values\": arraySpec.values,\n        \"minimum\": arraySpec.minimum,\n        \"maximum\": arraySpec.maximum,\n        function: undefined\n    };\n\n    if (styleSpec.$version < 7) {\n        arrayElementSpec.function = arraySpec.function;\n    }\n\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }, true));\n    }\n    return errors;\n}\n","// @flow\n\nimport getType from '../util/get_type.js';\nimport ValidationError from '../error/validation_error.js';\n\nimport type {ValidationOptions} from './validate.js';\n\ntype Options = ValidationOptions & {\n    arrayIndex: number;\n}\n\nexport default function validateNumber(options: Options): Array<ValidationError> {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    let type = getType(value);\n\n    // eslint-disable-next-line no-self-compare\n    if (type === 'number' && value !== value) {\n        type = 'NaN';\n    }\n\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n\n    if ('minimum' in valueSpec) {\n        let specMin = valueSpec.minimum;\n        if (getType(valueSpec.minimum) === 'array') {\n            const i = options.arrayIndex;\n            specMin = valueSpec.minimum[i];\n        }\n        if (value < specMin) {\n            return [new ValidationError(key, value, `${value} is less than the minimum value ${specMin}`)];\n        }\n    }\n\n    if ('maximum' in valueSpec) {\n        let specMax = valueSpec.maximum;\n        if (getType(valueSpec.maximum) === 'array') {\n            const i = options.arrayIndex;\n            specMax = valueSpec.maximum[i];\n        }\n        if (value > specMax) {\n            return [new ValidationError(key, value, `${value} is greater than the maximum value ${specMax}`)];\n        }\n    }\n\n    return [];\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\nimport validateObject from './validate_object.js';\nimport validateArray from './validate_array.js';\nimport validateNumber from './validate_number.js';\nimport {isExpression} from '../expression/index.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {\n    supportsPropertyExpression,\n    supportsZoomExpression,\n    supportsInterpolation\n} from '../util/properties.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateFunction(options: ValidationOptions): any {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues: {[string | number]: boolean} = {};\n    let previousStopDomainValue: ?mixed;\n    let previousStopDomainZoom;\n\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction =\n        getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        } else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n\n    return errors;\n\n    function validateFunctionStops(options: ValidationOptions) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n\n        let errors = [];\n        const value = options.value;\n\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n\n        return errors;\n    }\n\n    function validateFunctionStop(options: ValidationOptions) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n\n            const nextStopDomainZoom = unbundle(value[0].zoom);\n            if (typeof nextStopDomainZoom !== 'number') {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must be numbers')];\n            }\n\n            if (previousStopDomainZoom && previousStopDomainZoom > nextStopDomainZoom) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (nextStopDomainZoom !== previousStopDomainZoom) {\n                previousStopDomainZoom = nextStopDomainZoom;\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {zoom: {}},\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: {zoom: validateNumber, value: validateStopDomainValue}\n            }));\n        } else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {},\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n\n        return errors.concat(validate({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n\n    function validateStopDomainValue(options: ValidationOptions, stop: any) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n\n        const reportValue = options.value !== null ? options.value : stop;\n\n        if (!stopKeyType) {\n            stopKeyType = type;\n        } else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n\n        if (type !== 'number' && type !== 'string' && type !== 'boolean' && typeof value !== 'number' && typeof value !== 'string' && typeof value !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n\n        if (functionType === 'categorical' && type === 'number' && (typeof value !== 'number' || !isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${String(value)}`)];\n        }\n\n        if (functionType !== 'categorical' && type === 'number' && typeof value === 'number' && typeof previousStopDomainValue === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        } else {\n            previousStopDomainValue = value;\n        }\n\n        if (functionType === 'categorical' && (value: any) in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        } else {\n            stopDomainValues[(value: any)] = true;\n        }\n\n        return [];\n    }\n\n    function validateFunctionDefault(options: ValidationOptions) {\n        return validate({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\n\nimport {createExpression, createPropertyExpression} from '../expression/index.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {isStateConstant, isGlobalPropertyConstant, isFeatureConstant} from '../expression/is_constant.js';\nimport CompoundExpression from '../expression/compound_expression.js';\n\nimport type {Expression} from '../expression/expression.js';\n\nexport default function validateExpression(options: any): Array<ValidationError> {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n\n    const expressionObj = (expression.value: any).expression || (expression.value: any)._styleExpression.expression;\n\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        !expressionObj.outputDefined()) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n\n    if (options.expressionContext === 'filter') {\n        return disallowedFilterParameters(expressionObj, options);\n    }\n\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n\n    return [];\n}\n\nexport function disallowedFilterParameters(e: Expression, options: any): Array<ValidationError> {\n    const disallowedParameters = new Set([\n        'zoom',\n        'feature-state',\n        'pitch',\n        'distance-from-center'\n    ]);\n\n    if (options.valueSpec && options.valueSpec.expression) {\n        for (const param of options.valueSpec.expression.parameters) {\n            disallowedParameters.delete(param);\n        }\n    }\n\n    if (disallowedParameters.size === 0) {\n        return [];\n    }\n    const errors = [];\n\n    if (e instanceof CompoundExpression) {\n        if (disallowedParameters.has(e.name)) {\n            return [new ValidationError(options.key, options.value, `[\"${e.name}\"] expression is not supported in a filter for a ${options.object.type} layer with id: ${options.object.id}`)];\n        }\n    }\n    e.eachChild((arg) => {\n        errors.push(...disallowedFilterParameters(arg, options));\n    });\n\n    return errors;\n}\n","// @flow\n\nimport getType from '../util/get_type.js';\nimport ValidationError from '../error/validation_error.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateBoolean(options: ValidationOptions): Array<ValidationError> {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n\n    return [];\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport {parseCSSColor} from 'csscolorparser';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateColor(options: ValidationOptions): Array<ValidationError> {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n\n    if (parseCSSColor(value) === null) {\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n\n    return [];\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateEnum(options: ValidationOptions): Array<ValidationError> {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    } else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport validateExpression from './validate_expression.js';\nimport validateEnum from './validate_enum.js';\nimport getType from '../util/get_type.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport extend from '../util/extend.js';\nimport {isExpressionFilter} from '../feature_filter/index.js';\n\nimport type {ValidationOptions} from './validate.js';\n\ntype Options = ValidationOptions & {\n    layerType?: string;\n}\n\nexport default function validateFilter(options: Options): Array<ValidationError> {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        // We default to a layerType of `fill` because that points to a non-dynamic filter definition within the style-spec.\n        const layerType = options.layerType || 'fill';\n\n        return validateExpression(extend({}, options, {\n            expressionContext: 'filter',\n            valueSpec: options.styleSpec[`filter_${layerType}`]\n        }));\n    } else {\n        return validateNonExpressionFilter(options);\n    }\n}\n\nfunction validateNonExpressionFilter(options: Options) {\n    const value = options.value;\n    const key = options.key;\n\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n\n    const styleSpec = options.styleSpec;\n    let type;\n\n    let errors = [];\n\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n\n    switch (unbundle(value[0])) {\n    case '<':\n    case '<=':\n    case '>':\n    case '>=':\n        if (value.length >= 2 && unbundle(value[1]) === '$type') {\n            errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n        }\n        /* falls through */\n    case '==':\n    case '!=':\n        if (value.length !== 3) {\n            errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n        }\n        /* falls through */\n    case 'in':\n    case '!in':\n        if (value.length >= 2) {\n            type = getType(value[1]);\n            if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n        }\n        for (let i = 2; i < value.length; i++) {\n            type = getType(value[i]);\n            if (unbundle(value[1]) === '$type') {\n                errors = errors.concat(validateEnum({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    valueSpec: styleSpec.geometry_type,\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            } else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n            }\n        }\n        break;\n\n    case 'any':\n    case 'all':\n    case 'none':\n        for (let i = 1; i < value.length; i++) {\n            errors = errors.concat(validateNonExpressionFilter(({\n                key: `${key}[${i}]`,\n                value: value[i],\n                style: options.style,\n                styleSpec: options.styleSpec\n            }: any)));\n        }\n        break;\n\n    case 'has':\n    case '!has':\n        type = getType(value[1]);\n        if (value.length !== 2) {\n            errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n        } else if (type !== 'string') {\n            errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n        }\n        break;\n    }\n    return errors;\n}\n","// @flow\n\nimport validate from './validate.js';\nimport {default as ValidationError, ValidationWarning} from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport {isFunction} from '../function/index.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {supportsLightExpression, supportsPropertyExpression, supportsZoomExpression} from '../util/properties.js';\nimport {isGlobalPropertyConstant, isFeatureConstant, isStateConstant} from '../expression/is_constant.js';\n\nimport type {ValidationOptions} from './validate.js';\nimport {createPropertyExpression} from '../expression/index.js';\n\nexport type PropertyValidationOptions = ValidationOptions & {\n    objectKey: string;\n    layerType: string;\n    layer: Object;\n}\n\nexport default function validateProperty(options: PropertyValidationOptions, propertyType: string): Array<ValidationError> {\n    const key = options.key;\n    const style = options.style;\n    const layer = options.layer;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n\n    if (!layerSpec) return [];\n\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validate({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationWarning(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n\n    let tokenMatch: ?RegExp$matchResult;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        const example = `\\`{ \"type\": \"identity\", \"property\": ${tokenMatch ? JSON.stringify(tokenMatch[1]) : '\"_\"'} }\\``;\n        return [new ValidationError(\n            key, value,\n            `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: ${example}.`)];\n    }\n\n    const errors = [];\n\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs && !style.imports) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    } else if (options.layerType === 'model' && propertyType === 'paint' && layer && layer.layout && layer.layout.hasOwnProperty('model-id')) {\n        if (supportsPropertyExpression(valueSpec) && (supportsLightExpression(valueSpec) || supportsZoomExpression(valueSpec))) {\n            // Performance related style spec limitation: zoom and light expressions are not allowed for e.g. trees.\n            const expression = createPropertyExpression(deepUnbundle(value), valueSpec);\n            const expressionObj = (expression.value: any).expression || (expression.value: any)._styleExpression.expression;\n\n            if (expressionObj && !isGlobalPropertyConstant(expressionObj, ['measure-light'])) {\n                if (propertyKey !== 'model-emissive-strength' || (!isFeatureConstant(expressionObj) || !isStateConstant(expressionObj))) {\n                    errors.push(new ValidationError(key, value, `${propertyKey} does not support measure-light expressions when the model layer source is vector tile or GeoJSON.`));\n                }\n            }\n        }\n    }\n\n    return errors.concat(validate({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n","// @flow\n\nimport validateProperty from './validate_property.js';\n\nimport type ValidationError from '../error/validation_error.js';\nimport type {PropertyValidationOptions} from './validate_property.js';\n\nexport default function validatePaintProperty(options: PropertyValidationOptions): Array<ValidationError> {\n    return validateProperty(options, 'paint');\n}\n","// @flow\n\nimport validateProperty from './validate_property.js';\n\nimport type ValidationError from '../error/validation_error.js';\nimport type {PropertyValidationOptions} from './validate_property.js';\n\nexport default function validateLayoutProperty(options: PropertyValidationOptions): Array<ValidationError> {\n    return validateProperty(options, 'layout');\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\nimport validateObject from './validate_object.js';\nimport validateFilter from './validate_filter.js';\nimport validatePaintProperty from './validate_paint_property.js';\nimport validateLayoutProperty from './validate_layout_property.js';\nimport validateSpec from './validate.js';\nimport extend from '../util/extend.js';\n\nimport type {ValidationOptions} from './validate.js';\nimport type {LayerSpecification} from '../types.js';\n\ntype Options = ValidationOptions & {\n    value: LayerSpecification;\n    arrayIndex: number;\n}\n\nexport default function validateLayer(options: Options): Array<ValidationError> {\n    let errors = [];\n\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                // $FlowFixMe[prop-missing] - id.__line__ is added dynamically during the readStyle step\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n\n        let parent;\n\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref) parent = layer;\n        });\n\n        if (!parent) {\n            if (typeof ref === 'string')\n                errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        // $FlowFixMe[prop-missing] - ref is not defined on the LayerSpecification subtypes\n        } else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        } else {\n            type = unbundle(parent.type);\n        }\n    } else if (!(type === 'background' || type === 'sky' || type === 'slot')) {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        } else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            } else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            } else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            } else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            } else if (sourceType === 'raster-dem' && type !== 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\'.'));\n            } else if (type === 'line' && layer.paint && (layer.paint['line-gradient'] || layer.paint['line-trim-offset']) &&\n                       (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter(options) {\n                return validateFilter(extend({layerType: type}, options));\n            },\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    valueSpec: {},\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extend({layerType: type}, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    valueSpec: {},\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extend({layerType: type, layer}, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n\n    return errors;\n}\n","// @flow\n\nimport getType from '../util/get_type.js';\nimport ValidationError from '../error/validation_error.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateString(options: $Shape<ValidationOptions>): Array<ValidationError> {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n\n    return [];\n}\n","// @flow\n\nimport {default as ValidationError, ValidationWarning} from '../error/validation_error.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\nimport validateObject from './validate_object.js';\nimport validateEnum from './validate_enum.js';\nimport validateExpression from './validate_expression.js';\nimport validateString from './validate_string.js';\nimport getType from '../util/get_type.js';\n\nimport type {StyleReference} from '../reference/latest.js';\nimport type {ValidationOptions} from './validate.js';\n\nconst objectElementValidators = {\n    promoteId: validatePromoteId\n};\n\nexport default function validateSource(options: ValidationOptions): Array<ValidationError> {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n\n    const type = unbundle(value.type);\n    let errors = [];\n\n    if (['vector', 'raster', 'raster-dem'].includes(type)) {\n        if (!value.url && !value.tiles) {\n            errors.push(new ValidationWarning(key, value, 'Either \"url\" or \"tiles\" is required.'));\n        }\n    }\n\n    switch (type) {\n    case 'vector':\n    case 'raster':\n    case 'raster-dem':\n        errors = errors.concat(validateObject({\n            key,\n            value,\n            valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n            style: options.style,\n            styleSpec,\n            objectElementValidators\n        }));\n        return errors;\n\n    case 'geojson':\n        errors = validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_geojson,\n            style,\n            styleSpec,\n            objectElementValidators\n        });\n        if (value.cluster) {\n            for (const prop in value.clusterProperties) {\n                const [operator, mapExpr] = value.clusterProperties[prop];\n                const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n\n                errors.push(...validateExpression({\n                    key: `${key}.${prop}.map`,\n                    value: mapExpr,\n                    expressionContext: 'cluster-map'\n                }));\n                errors.push(...validateExpression({\n                    key: `${key}.${prop}.reduce`,\n                    value: reduceExpr,\n                    expressionContext: 'cluster-reduce'\n                }));\n            }\n        }\n        return errors;\n\n    case 'video':\n        return validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_video,\n            style,\n            styleSpec\n        });\n\n    case 'image':\n        return validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_image,\n            style,\n            styleSpec\n        });\n\n    case 'canvas':\n        return [new ValidationError(key, null, `Please use runtime APIs to add canvas sources, rather than including them in stylesheets.`, 'source.canvas')];\n\n    default:\n        return validateEnum({\n            key: `${key}.type`,\n            value: value.type,\n            valueSpec: {values: getSourceTypeValues(styleSpec)},\n            style,\n            styleSpec\n        });\n    }\n}\n\nfunction getSourceTypeValues(styleSpec: StyleReference) {\n    return styleSpec.source.reduce((memo, source) => {\n        const sourceType = styleSpec[source];\n        if (sourceType.type.type === 'enum') {\n            memo = memo.concat(Object.keys(sourceType.type.values));\n        }\n        return memo;\n    }, []);\n}\n\nfunction validatePromoteId({key, value}: $Shape<ValidationOptions>) {\n    if (getType(value) === 'string') {\n        return validateString({key, value});\n    } else {\n        const errors = [];\n        for (const prop in value) {\n            errors.push(...validateString({key: `${key}.${prop}`, value: value[prop]}));\n        }\n        return errors;\n    }\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\n\nimport type {ValidationOptions} from './validate.js';\n\n// Allow any URL, use dummy base, if it's a relative URL\nfunction isValidUrl(str: string): boolean {\n    const isRelative = str.indexOf('://') === -1;\n    try {\n        new URL(str, isRelative ? 'http://example.com' : undefined);\n        return true;\n    } catch (_) {\n        return false;\n    }\n}\n\nexport default function validateModel(options: ValidationOptions): Array<ValidationError> {\n    const url = options.value;\n    let errors = [];\n\n    if (!url) {\n        return errors;\n    }\n\n    const type = getType(url);\n    if (type !== 'string') {\n        errors = errors.concat([new ValidationError(options.key, url, `string expected, \"${type}\" found`)]);\n        return errors;\n    }\n\n    if (!isValidUrl(url)) {\n        errors = errors.concat([new ValidationError(options.key, url, `invalid url \"${url}\"`)]);\n    }\n\n    return errors;\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateLight(options: ValidationOptions): Array<ValidationError> {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n\n    let errors = [];\n\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        } else if (lightSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n","// @flow\n\nimport {default as ValidationError, ValidationWarning} from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\n\nimport type {ValidationOptions} from './validate.js';\n\ntype Options = ValidationOptions & {\n    arrayIndex: number;\n}\n\nexport default function validateLights(options: Options): Array<ValidationError> {\n    const light = options.value;\n    let errors = [];\n\n    if (!light) {\n        return errors;\n    }\n\n    const type = getType(light);\n    if (type !== 'object') {\n        errors = errors.concat([new ValidationError('light-3d', light, `object expected, ${type} found`)]);\n        return errors;\n    }\n\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec['light-3d'];\n    const key = options.key;\n    const style = options.style;\n    const lights = options.style.lights;\n\n    for (const key of ['type', 'id']) {\n        if (!(key in light)) {\n            errors = errors.concat([new ValidationError('light-3d', light, `missing property ${key} on light`)]);\n            return errors;\n        }\n    }\n\n    if (light.type && lights) {\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const lightType = unbundle(light.type);\n            const otherLight = lights[i];\n            if (unbundle(otherLight.type) === lightType) {\n                // $FlowFixMe[prop-missing] - id.__line__ is added dynamically during the readStyle step\n                errors.push(new ValidationError(key, light.id, `duplicate light type \"${light.type}\", previously defined at line ${otherLight.id.__line__}`));\n            }\n        }\n    }\n\n    const lightType = `properties_light_${light['type']}`;\n    if (!(lightType in styleSpec)) {\n        errors = errors.concat([new ValidationError('light-3d', light, `Invalid light type ${light['type']}`)]);\n        return errors;\n    }\n\n    const lightPropertySpec = styleSpec[lightType];\n\n    for (const key in light) {\n        if (key === 'properties') {\n            const properties = light[key];\n            const propertiesType = getType(properties);\n            if (propertiesType !== 'object') {\n                errors = errors.concat([new ValidationError('properties', properties, `object expected, ${propertiesType} found`)]);\n                return errors;\n            }\n            for (const propertyKey in properties) {\n                if (!lightPropertySpec[propertyKey]) {\n                    errors = errors.concat([new ValidationWarning(options.key, properties[propertyKey], `unknown property \"${propertyKey}\"`)]);\n                } else {\n                    errors = errors.concat(validate({\n                        key: propertyKey,\n                        value: properties[propertyKey],\n                        valueSpec: lightPropertySpec[propertyKey],\n                        style,\n                        styleSpec\n                    }));\n                }\n            }\n        } else {\n            const transitionMatch = key.match(/^(.*)-transition$/);\n            if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n                errors = errors.concat(validate({\n                    key,\n                    value: light[key],\n                    valueSpec: styleSpec.transition,\n                    style,\n                    styleSpec\n                }));\n            } else if (lightSpec[key]) {\n                errors = errors.concat(validate({\n                    key,\n                    value: light[key],\n                    valueSpec: lightSpec[key],\n                    style,\n                    styleSpec\n                }));\n            } else {\n                errors = errors.concat([new ValidationWarning(key, light[key], `unknown property \"${key}\"`)]);\n            }\n        }\n    }\n\n    return errors;\n}\n","// @flow\n\nimport {default as ValidationError, ValidationWarning} from '../error/validation_error.js';\nimport validate from './validate.js';\nimport getType from '../util/get_type.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateTerrain(options: ValidationOptions): Array<ValidationError> {\n    const terrain = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const terrainSpec = styleSpec.terrain;\n    let errors = [];\n\n    const rootType = getType(terrain);\n    if (terrain === undefined) {\n        return errors;\n    } else if (rootType === 'null') {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('terrain', terrain, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in terrain) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && terrainSpec[transitionMatch[1]] && terrainSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: terrain[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        } else if (terrainSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: terrain[key],\n                valueSpec: terrainSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationWarning(key, terrain[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    if (!terrain.source) {\n        errors.push(new ValidationError(key, terrain, `terrain is missing required property \"source\"`));\n    } else {\n        const source = style.sources && style.sources[terrain.source];\n        const sourceType = source && unbundle(source.type);\n        if (!source) {\n            errors.push(new ValidationError(key, terrain.source, `source \"${terrain.source}\" not found`));\n        } else if (sourceType !== 'raster-dem') {\n            errors.push(new ValidationError(key, terrain.source, `terrain cannot be used with a source of type ${String(sourceType)}, it only be used with a \"raster-dem\" source type`));\n        }\n    }\n\n    return errors;\n}\n","// @flow\n\nimport {default as ValidationError, ValidationWarning} from '../error/validation_error.js';\nimport validate from './validate.js';\nimport getType from '../util/get_type.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateFog(options: ValidationOptions): Array<ValidationError> {\n    const fog = options.value;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const fogSpec = styleSpec.fog;\n    let errors = [];\n\n    const rootType = getType(fog);\n    if (fog === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('fog', fog, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in fog) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && fogSpec[transitionMatch[1]] && fogSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: fog[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        } else if (fogSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: fog[key],\n                valueSpec: fogSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationWarning(key, fog[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n","// @flow\n\nimport validateExpression from './validate_expression.js';\nimport validateString from './validate_string.js';\n\nimport type {ValidationOptions} from './validate.js';\nimport type ValidationError from '../error/validation_error.js';\n\nexport default function validateFormatted(options: ValidationOptions): Array<ValidationError> {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n","// @flow\n\nimport validateExpression from './validate_expression.js';\nimport validateString from './validate_string.js';\n\nimport type {ValidationOptions} from './validate.js';\nimport type ValidationError from '../error/validation_error.js';\n\nexport default function validateImage(options: ValidationOptions): Array<ValidationError> {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateProjection(options: ValidationOptions): Array<ValidationError> {\n    const projection = options.value;\n    const styleSpec = options.styleSpec;\n    const projectionSpec = styleSpec.projection;\n    const style = options.style;\n\n    let errors = [];\n\n    const rootType = getType(projection);\n\n    if (rootType === 'object') {\n        for (const key in projection) {\n            errors = errors.concat(validate({\n                key,\n                value: projection[key],\n                valueSpec: projectionSpec[key],\n                style,\n                styleSpec\n            }));\n        }\n    } else if (rootType !== 'string') {\n        errors = errors.concat([new ValidationError('projection', projection, `object or string expected, ${rootType} found`)]);\n    }\n\n    return errors;\n}\n","// @flow\n\nimport extend from '../util/extend.js';\nimport ValidationError from '../error/validation_error.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {isExpression} from '../expression/index.js';\nimport {isFunction} from '../function/index.js';\n\nimport validateImport from './validate_import.js';\nimport validateFunction from './validate_function.js';\nimport validateExpression from './validate_expression.js';\nimport validateObject from './validate_object.js';\nimport validateArray from './validate_array.js';\nimport validateBoolean from './validate_boolean.js';\nimport validateNumber from './validate_number.js';\nimport validateColor from './validate_color.js';\nimport validateEnum from './validate_enum.js';\nimport validateFilter from './validate_filter.js';\nimport validateLayer from './validate_layer.js';\nimport validateSource from './validate_source.js';\nimport validateModel from './validate_model.js';\nimport validateLight from './validate_light.js';\nimport validateLights from './validate_lights.js';\nimport validateTerrain from './validate_terrain.js';\nimport validateFog from './validate_fog.js';\nimport validateString from './validate_string.js';\nimport validateFormatted from './validate_formatted.js';\nimport validateImage from './validate_image.js';\nimport validateProjection from './validate_projection.js';\n\nimport type {StyleReference} from '../reference/latest.js';\nimport type {StyleSpecification} from '../types.js';\nimport getType from '../util/get_type.js';\n\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'model': validateModel,\n    'light': validateLight,\n    'light-3d': validateLights,\n    'terrain': validateTerrain,\n    'fog': validateFog,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage,\n    'projection': validateProjection,\n    'import': validateImport\n};\n\n// Main recursive validation function. Tracks:\n//\n// - key: string representing location of validation in style tree. Used only\n//   for more informative error reporting.\n// - value: current value from style being evaluated. May be anything from a\n//   high level object that needs to be descended into deeper or a simple\n//   scalar value.\n// - valueSpec: current spec being evaluated. Tracks value.\n// - styleSpec: current full spec being evaluated.\nexport type ValidationOptions = {\n    key: string;\n    value: Object;\n    valueSpec: Object;\n    style: $Shape<StyleSpecification>;\n    styleSpec: StyleReference;\n}\n\nexport default function validate(options: ValidationOptions, arrayAsExpression: boolean = false): Array<ValidationError> {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n\n    if (valueSpec.expression && isFunction(unbundle(value))) {\n        return validateFunction(options);\n    } else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n    } else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        const valid = VALIDATORS[valueSpec.type](options);\n        if (arrayAsExpression === true && valid.length > 0 && getType(options.value) === \"array\") {\n            // Try to validate as an expression\n            return validateExpression(options);\n        } else {\n            return valid;\n        }\n    } else {\n        const valid = validateObject(extend({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport validateString from './validate_string.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function(options: ValidationOptions): Array<ValidationError> {\n    const value = options.value;\n    const key = options.key;\n\n    const errors = validateString(options);\n    if (errors.length) return errors;\n\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n\n    return errors;\n}\n","// @flow\nimport validate from './validate.js';\nimport latestStyleSpec from '../reference/latest.js';\nimport validateGlyphsURL from './validate_glyphs_url.js';\n\nimport ValidationError from '../error/validation_error.js';\n\nimport type {ValidationOptions} from './validate.js';\nimport type {StyleSpecification} from '../types.js';\n\ntype StyleValidationOptions = {\n    key?: $PropertyType<ValidationOptions, 'key'>\n}\n\nexport default function validateStyle(style: StyleSpecification, styleSpec: Object = latestStyleSpec, options: StyleValidationOptions = {}): ValidationError[] {\n    const errors = validate({\n        key: options.key || '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        objectElementValidators: {\n            glyphs: validateGlyphsURL,\n            '*': () => []\n        }\n    });\n\n    return errors;\n}\n","// @flow\nimport latestStyleSpec from './reference/latest.js';\n\nimport _validateStyle from './validate/validate_style.js';\nimport _validateSource from './validate/validate_source.js';\nimport _validateLight from './validate/validate_light.js';\nimport _validateLights from './validate/validate_lights.js';\nimport _validateTerrain from './validate/validate_terrain.js';\nimport _validateFog from './validate/validate_fog.js';\nimport _validateLayer from './validate/validate_layer.js';\nimport _validateFilter from './validate/validate_filter.js';\nimport _validatePaintProperty from './validate/validate_paint_property.js';\nimport _validateLayoutProperty from './validate/validate_layout_property.js';\nimport _validateModel from './validate/validate_model.js';\n\nimport type {StyleSpecification} from './types.js';\n\nexport type ValidationError = interface {\n    message: string,\n    identifier?: ?string,\n    line?: ?number,\n};\nexport type ValidationErrors = $ReadOnlyArray<ValidationError>;\nexport type Validator = (Object) => ValidationErrors;\n\n/**\n * Validate a Mapbox GL style against the style specification. This entrypoint,\n * `mapbox-gl-style-spec/lib/validate_style.min`, is designed to produce as\n * small a browserify bundle as possible by omitting unnecessary functionality\n * and legacy style specifications.\n *\n * @private\n * @param {Object} style The style to be validated.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the latest style spec is used.\n * @returns {Array<ValidationError>}\n * @example\n *   var validate = require('mapbox-gl-style-spec/lib/validate_style.min');\n *   var errors = validate(style);\n */\nexport function validateStyle(style: StyleSpecification, styleSpec: Object = latestStyleSpec): ValidationErrors {\n    const errors = _validateStyle(style, styleSpec);\n    return sortErrors(errors);\n}\n\nexport const validateSource: Validator = opts => sortErrors(_validateSource(opts));\nexport const validateLight: Validator = opts => sortErrors(_validateLight(opts));\nexport const validateLights: Validator = opts => sortErrors(_validateLights(opts));\nexport const validateTerrain: Validator = opts => sortErrors(_validateTerrain(opts));\nexport const validateFog: Validator = opts => sortErrors(_validateFog(opts));\nexport const validateLayer: Validator = opts => sortErrors(_validateLayer(opts));\nexport const validateFilter: Validator = opts => sortErrors(_validateFilter(opts));\nexport const validatePaintProperty: Validator = opts => sortErrors(_validatePaintProperty(opts));\nexport const validateLayoutProperty: Validator = opts => sortErrors(_validateLayoutProperty(opts));\nexport const validateModel: Validator = opts => sortErrors(_validateModel(opts));\n\nfunction sortErrors(errors: ValidationErrors) {\n    return errors.slice().sort((a, b) => a.line && b.line ? a.line - b.line : 0);\n}\n","/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,12],$V1=[1,13],$V2=[1,9],$V3=[1,10],$V4=[1,11],$V5=[1,14],$V6=[1,15],$V7=[14,18,22,24],$V8=[18,22],$V9=[22,24];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"JSONString\":3,\"STRING\":4,\"JSONNumber\":5,\"NUMBER\":6,\"JSONNullLiteral\":7,\"NULL\":8,\"JSONBooleanLiteral\":9,\"TRUE\":10,\"FALSE\":11,\"JSONText\":12,\"JSONValue\":13,\"EOF\":14,\"JSONObject\":15,\"JSONArray\":16,\"{\":17,\"}\":18,\"JSONMemberList\":19,\"JSONMember\":20,\":\":21,\",\":22,\"[\":23,\"]\":24,\"JSONElementList\":25,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"STRING\",6:\"NUMBER\",8:\"NULL\",10:\"TRUE\",11:\"FALSE\",14:\"EOF\",17:\"{\",18:\"}\",21:\":\",22:\",\",23:\"[\",24:\"]\"},\nproductions_: [0,[3,1],[5,1],[7,1],[9,1],[9,1],[12,2],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[15,2],[15,3],[20,3],[19,1],[19,3],[16,2],[16,3],[25,1],[25,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n // replace escaped characters with actual character\n          this.$ = new String(yytext.replace(/\\\\(\\\\|\")/g, \"$\"+\"1\")\n                     .replace(/\\\\n/g,'\\n')\n                     .replace(/\\\\r/g,'\\r')\n                     .replace(/\\\\t/g,'\\t')\n                     .replace(/\\\\v/g,'\\v')\n                     .replace(/\\\\f/g,'\\f')\n                     .replace(/\\\\b/g,'\\b'));\n          this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 2:\n\n            this.$ = new Number(yytext);\n            this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 3:\n\n            this.$ = null;\n        \nbreak;\ncase 4:\n\n            this.$ = new Boolean(true);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 5:\n\n            this.$ = new Boolean(false);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 6:\nreturn this.$ = $$[$0-1];\nbreak;\ncase 13:\nthis.$ = {}; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 14: case 19:\nthis.$ = $$[$0-1]; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 15:\nthis.$ = [$$[$0-2], $$[$0]];\nbreak;\ncase 16:\nthis.$ = {}; this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 17:\nthis.$ = $$[$0-2]; $$[$0-2][$$[$0][0]] = $$[$0][1];\nbreak;\ncase 18:\nthis.$ = []; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 20:\nthis.$ = [$$[$0]];\nbreak;\ncase 21:\nthis.$ = $$[$0-2]; $$[$0-2].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,12:1,13:2,15:7,16:8,17:$V5,23:$V6},{1:[3]},{14:[1,16]},o($V7,[2,7]),o($V7,[2,8]),o($V7,[2,9]),o($V7,[2,10]),o($V7,[2,11]),o($V7,[2,12]),o($V7,[2,3]),o($V7,[2,4]),o($V7,[2,5]),o([14,18,21,22,24],[2,1]),o($V7,[2,2]),{3:20,4:$V0,18:[1,17],19:18,20:19},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:23,15:7,16:8,17:$V5,23:$V6,24:[1,21],25:22},{1:[2,6]},o($V7,[2,13]),{18:[1,24],22:[1,25]},o($V8,[2,16]),{21:[1,26]},o($V7,[2,18]),{22:[1,28],24:[1,27]},o($V9,[2,20]),o($V7,[2,14]),{3:20,4:$V0,20:29},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:30,15:7,16:8,17:$V5,23:$V6},o($V7,[2,19]),{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:31,15:7,16:8,17:$V5,23:$V6},o($V8,[2,17]),o($V8,[2,15]),o($V9,[2,21])],\ndefaultActions: {16:[2,6]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        function lex() {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 6\nbreak;\ncase 2:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 4\nbreak;\ncase 3:return 17\nbreak;\ncase 4:return 18\nbreak;\ncase 5:return 23\nbreak;\ncase 6:return 24\nbreak;\ncase 7:return 22\nbreak;\ncase 8:return 21\nbreak;\ncase 9:return 10\nbreak;\ncase 10:return 11\nbreak;\ncase 11:return 8\nbreak;\ncase 12:return 14\nbreak;\ncase 13:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:(-?([0-9]|[1-9][0-9]+))(\\.[0-9]+)?([eE][-+]?[0-9]+)?\\b)/,/^(?:\"(?:\\\\[\\\\\"bfnrt/]|\\\\u[a-fA-F0-9]{4}|[^\\\\\\0-\\x09\\x0a-\\x1f\"])*\")/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?::)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\n}\n","// @noflow\n\nimport ParsingError from './error/parsing_error.js';\nimport jsonlint from '@mapbox/jsonlint-lines-primitives';\n\nexport default function readStyle(style) {\n    if (style instanceof String || typeof style === 'string' || style instanceof Buffer) {\n        try {\n            return jsonlint.parse(style.toString());\n        } catch (e) {\n            throw new ParsingError(e);\n        }\n    }\n\n    return style;\n}\n","// @flow\nimport {validateStyle as validateStyleMin} from './validate_style.min.js';\nimport {v8} from './style-spec.js';\nimport readStyle from './read_style.js';\n\nimport type {ValidationErrors} from './validate_style.min.js';\nimport type {StyleSpecification} from './types.js';\n\n/**\n * Validate a Mapbox GL style against the style specification.\n *\n * @private\n * @alias validate\n * @param {Object|String|Buffer} style The style to be validated. If a `String`\n *     or `Buffer` is provided, the returned errors will contain line numbers.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the spec version is inferred from the stylesheet.\n * @returns {Array<ValidationError|ParsingError>}\n * @example\n *   var validate = require('mapbox-gl-style-spec').validate;\n *   var style = fs.readFileSync('./style.json', 'utf8');\n *   var errors = validate(style);\n */\n\nexport default function validateStyle(style: StyleSpecification | string | Buffer, styleSpec: Object = v8): ValidationErrors {\n    let s = style;\n\n    try {\n        s = readStyle(s);\n    } catch (e) {\n        return [e];\n    }\n\n    return validateStyleMin(s, styleSpec);\n}\n\nexport {\n    validateSource as source,\n    validateModel as model,\n    validateLight as light,\n    validateLayer as layer,\n    validateFilter as filter,\n    validateLights as lights,\n    validateTerrain as terrain,\n    validateFog as fog,\n    validatePaintProperty as paintProperty,\n    validateLayoutProperty as layoutProperty\n} from './validate_style.min.js';\n","// @flow\n\nimport {validateStyle} from './validate_style.min.js';\nimport {v8} from './style-spec.js';\nimport readStyle from './read_style.js';\nimport ValidationError from './error/validation_error.js';\nimport getType from './util/get_type.js';\n\nimport type {ValidationErrors} from './validate_style.min.js';\n\nconst SUPPORTED_SPEC_VERSION = 8;\nconst MAX_SOURCES_IN_STYLE = 15;\n\nfunction isValid(value: ?string, regex: RegExp): boolean {\n    if (!value || getType(value) !== 'string') return true;\n    return !!value.match(regex);\n}\n\nfunction getSourceCount(source: Object): number {\n    if (source.url) {\n        return source.url.split(',').length;\n    } else {\n        return 0;\n    }\n}\n\nfunction getAllowedKeyErrors(obj: Object, keys: Array<*>, path: ?string): Array<ValidationError> {\n    const allowed = new Set(keys);\n    const errors = [];\n    Object.keys(obj).forEach(k => {\n        if (!allowed.has(k)) {\n            const prop = path ? `${path}.${k}` : null;\n            errors.push(new ValidationError(prop, obj[k], `Unsupported property \"${k}\"`));\n        }\n    });\n    return errors;\n}\n\nconst acceptedSourceTypes = new Set([\"vector\", \"raster\", \"raster-dem\", \"model\", \"batched-model\"]);\nfunction getSourceErrors(source: Object, i: number): Array<ValidationError> {\n    const errors = [];\n\n    /*\n     * Inlined sources are not supported by the Mapbox Styles API, so only\n     * \"type\", \"url\", and \"tileSize\" properties are valid\n     */\n    const sourceKeys = ['type', 'url', 'tileSize'];\n    errors.push(...getAllowedKeyErrors(source, sourceKeys, 'source'));\n\n    /*\n     * \"type\" is required and must be one of \"vector\", \"raster\", \"raster-dem\"\n     */\n    if (!acceptedSourceTypes.has(String(source.type))) {\n        errors.push(new ValidationError(`sources[${i}].type`, source.type, `Expected one of [${Array.from(acceptedSourceTypes).join(\", \")}]`));\n    }\n\n    /*\n     * \"source\" is required. Valid examples:\n     * mapbox://mapbox.abcd1234\n     * mapbox://penny.abcd1234\n     * mapbox://mapbox.abcd1234,penny.abcd1234\n     */\n    const sourceUrlPattern = /^mapbox:\\/\\/([^/]*)$/;\n    if (!source.url || !isValid(source.url, sourceUrlPattern)) {\n        errors.push(new ValidationError(`sources[${i}].url`, source.url, 'Expected a valid Mapbox tileset url'));\n    }\n\n    return errors;\n}\n\nfunction getMaxSourcesErrors(sourcesCount: number): Array<ValidationError> {\n    const errors = [];\n    if (sourcesCount > MAX_SOURCES_IN_STYLE) {\n        errors.push(new ValidationError('sources', null, `Styles must contain ${MAX_SOURCES_IN_STYLE} or fewer sources`));\n    }\n    return errors;\n}\n\nfunction getSourcesErrors(sources: Object): {errors: Array<ValidationError>, sourcesCount: number} {\n    const errors = [];\n    let sourcesCount = 0;\n\n    Object.keys(sources).forEach((s: string, i: number) => {\n        const sourceErrors = getSourceErrors(sources[s], i);\n\n        // If source has errors, skip counting\n        if (!sourceErrors.length) {\n            sourcesCount = sourcesCount + getSourceCount(sources[s]);\n        }\n\n        errors.push(...sourceErrors);\n    });\n\n    return {errors, sourcesCount};\n}\n\nfunction getImportErrors(imports: Array<Object> = []): {errors: Array<ValidationError>, sourcesCount: number} {\n    let errors: Array<ValidationError> = [];\n\n    let sourcesCount = 0;\n    const validateImports = (imports: Array<Object> = []) => {\n        for (const importSpec of imports) {\n            const style = importSpec.data;\n            if (!style) continue;\n\n            if (style.imports) {\n                validateImports(style.imports);\n            }\n\n            errors = errors.concat(getRootErrors(style, Object.keys(v8.$root)));\n\n            if (style.sources) {\n                const sourcesErrors = getSourcesErrors(style.sources);\n                sourcesCount += sourcesErrors.sourcesCount;\n                errors = errors.concat(sourcesErrors.errors);\n            }\n        }\n    };\n\n    validateImports(imports);\n    if (imports.length !== (new Set(imports.map(i => i.id))).size) {\n        errors.push(new ValidationError(null, null, 'Duplicate ids of imports'));\n    }\n\n    return {errors, sourcesCount};\n}\n\nfunction getRootErrors(style: Object, specKeys: Array<any>): Array<ValidationError> {\n    const errors = [];\n\n    /*\n     * The following keys are optional but fully managed by the Mapbox Styles\n     * API. Values on stylesheet on POST or PATCH will be ignored: \"owner\",\n     * \"id\", \"cacheControl\", \"draft\", \"created\", \"modified\", \"protected\"\n     *\n     * The following keys are optional. The Mapbox Styles API respects value on\n     * stylesheet on PATCH, but ignores the value on POST: \"visibility\"\n     */\n    const optionalRootProperties = [\n        'owner',\n        'id',\n        'cacheControl',\n        'draft',\n        'created',\n        'modified',\n        'visibility',\n        'protected',\n        'models',\n        'lights'\n    ];\n\n    const allowedKeyErrors = getAllowedKeyErrors(style, [...specKeys, ...optionalRootProperties]);\n    errors.push(...allowedKeyErrors);\n\n    if (style.version > SUPPORTED_SPEC_VERSION || style.version < SUPPORTED_SPEC_VERSION) {\n        errors.push(new ValidationError('version', style.version, `Style version must be ${SUPPORTED_SPEC_VERSION}`));\n    }\n\n    /*\n     * \"glyphs\" is optional. If present, valid examples:\n     * mapbox://fonts/penny/{fontstack}/{range}.pbf\n     * mapbox://fonts/mapbox/{fontstack}/{range}.pbf\n     */\n    const glyphUrlPattern = /^mapbox:\\/\\/fonts\\/([^/]*)\\/{fontstack}\\/{range}.pbf$/;\n    if (!isValid(style.glyphs, glyphUrlPattern)) {\n        errors.push(new ValidationError('glyphs', style.glyphs, 'Styles must reference glyphs hosted by Mapbox'));\n    }\n\n    /*\n     * \"sprite\" is optional. If present, valid examples:\n     * mapbox://sprites/penny/abcd1234\n     * mapbox://sprites/mapbox/abcd1234/draft\n     * mapbox://sprites/cyrus/abcd1234/abcd1234\n     */\n    const spriteUrlPattern = /^mapbox:\\/\\/sprites\\/([^/]*)\\/([^/]*)\\/?([^/]*)?$/;\n    if (!isValid(style.sprite, spriteUrlPattern)) {\n        errors.push(new ValidationError('sprite', style.sprite, 'Styles must reference sprites hosted by Mapbox'));\n    }\n\n    /*\n     * \"visibility\" is optional. If present, valid examples:\n     * \"private\"\n     * \"public\"\n     */\n    const visibilityPattern = /^(public|private)$/;\n    if (!isValid(style.visibility, visibilityPattern)) {\n        errors.push(new ValidationError('visibility', style.visibility, 'Style visibility must be public or private'));\n    }\n\n    if (style.protected !== undefined && getType(style.protected) !== 'boolean') {\n        errors.push(new ValidationError('protected', style.protected, 'Style protection must be true or false'));\n    }\n\n    return errors;\n}\n\n/**\n * Validate a Mapbox GL style against the style specification and check for\n * compatibility with the Mapbox Styles API.\n *\n * @param {Object} style The style to be validated.\n * @returns {Array<ValidationError>}\n * @example\n *   var validateMapboxApiSupported = require('mapbox-gl-style-spec/lib/validate_style_mapbox_api_supported.js');\n *   var errors = validateMapboxApiSupported(style);\n */\nexport default function validateMapboxApiSupported(style: Object, styleSpec: Object = v8): ValidationErrors {\n    let s = style;\n    try {\n        s = readStyle(s);\n    } catch (e) {\n        return [e];\n    }\n\n    let errors = validateStyle(s, styleSpec)\n        .concat(getRootErrors(s, Object.keys(v8.$root)));\n\n    let sourcesCount = 0;\n    if (s.sources) {\n        const sourcesErrors = getSourcesErrors(s.sources);\n        sourcesCount += sourcesErrors.sourcesCount;\n        errors = errors.concat(sourcesErrors.errors);\n    }\n\n    if (s.imports) {\n        const importsErrors = getImportErrors(s.imports);\n        sourcesCount += importsErrors.sourcesCount;\n        errors = errors.concat(importsErrors.errors);\n    }\n\n    errors = errors.concat(getMaxSourcesErrors(sourcesCount));\n\n    return errors;\n}\n","// @flow\n\ntype ExpressionType = 'data-driven' | 'color-ramp' | 'data-constant' | 'constant';\ntype ExpressionParameters = Array<'zoom' | 'feature' | 'feature-state' | 'heatmap-density' | 'line-progress' | 'raster-value' | 'sky-radial-progress' | 'pitch' | 'distance-from-center' | 'measure-light'>;\n\nexport type ExpressionSpecification = {\n    interpolated: boolean,\n    parameters: ExpressionParameters,\n    relaxZoomRestriction: boolean\n}\n\nexport type StylePropertySpecification = {\n    type: 'number',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: number\n} | {\n    type: 'string',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string,\n    tokens?: boolean\n} | {\n    type: 'boolean',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: boolean\n} | {\n    type: 'enum',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    values: {[_: string]: {}},\n    transition: boolean,\n    default?: string\n} | {\n    type: 'color',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string,\n    overridable: boolean\n} | {\n    type: 'array',\n    value: 'number',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    length?: number,\n    transition: boolean,\n    default?: Array<number>\n} | {\n    type: 'array',\n    value: 'string',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    length?: number,\n    transition: boolean,\n    default?: Array<string>\n} | {\n    type: 'resolvedImage',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string\n};\n\nimport v8 from './reference/v8.json';\nimport latest from './reference/latest.js';\nimport format from './format.js';\nimport migrate from './migrate.js';\nimport composite from './composite.js';\nimport derefLayers from './deref.js';\nimport diff from './diff.js';\nimport ValidationError from './error/validation_error.js';\nimport ParsingError from './error/parsing_error.js';\nimport {StyleExpression, isExpression, createExpression, createPropertyExpression, normalizePropertyExpression, ZoomConstantExpression, ZoomDependentExpression, StylePropertyFunction} from './expression/index.js';\nimport featureFilter, {isExpressionFilter} from './feature_filter/index.js';\n\nimport convertFilter from './feature_filter/convert.js';\nimport Color from './util/color.js';\nimport {createFunction, isFunction} from './function/index.js';\nimport convertFunction from './function/convert.js';\nimport {eachSource, eachLayer, eachProperty} from './visit.js';\n\nimport validate from './validate_style.js';\nimport validateMapboxApiSupported from './validate_mapbox_api_supported.js';\n\nconst expression = {\n    StyleExpression,\n    isExpression,\n    isExpressionFilter,\n    createExpression,\n    createPropertyExpression,\n    normalizePropertyExpression,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    StylePropertyFunction\n};\n\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction\n};\n\nconst visit = {eachSource, eachLayer, eachProperty};\n\nexport {\n    v8,\n    latest,\n    format,\n    migrate,\n    composite,\n    derefLayers,\n    diff,\n    ValidationError,\n    ParsingError,\n    expression,\n    featureFilter,\n    convertFilter,\n    Color,\n    styleFunction as function,\n    validate,\n    validateMapboxApiSupported,\n    visit\n};\n"],"names":["stringOrChar","stringify","passedObj","options","indent","JSON","undefined","slice","maxLength","Infinity","replacer","_stringify","obj","currentIndent","reserved","toJSON","string","length","prettified","replace","match","stringLiteral","parse","nextIndent","items","index","start","end","Array","isArray","push","keys","Object","key","keyPart","value","join","sortKeysBy","reference","result","format","style","space","$root","layers","map","layer","stringifyPretty","getPropertyReference","propertyName","i","Reference","layout","paint","eachSource","callback","k","sources","eachLayer","eachProperty","inner","propertyType","type","properties","forEach","path","id","set","x","eachLayout","indexOf","eachPaint","resolveConstant","constants","isFunction","stops","renameProperty","from","to","version","source","url","coordinates","coord","reverse","property","stop","migrateFontstackURL","input","inputParsed","URL","inputPathnameParts","pathname","split","protocol","hostname","assert","decodeURI","predicate","Error","glyphs","migrateFontStack","font","splitAndTrim","s","trim","firstSymbolLayer","symbolLayers","splice","concat","output","inputs","ParsingError","constructor","message","Scope","parent","bindings","name","expression","get","has","NullType","kind","NumberType","StringType","BooleanType","ColorType","ObjectType","ValueType","ErrorType","CollatorType","FormattedType","ResolvedImageType","array","itemType","N","toString","valueMemberTypes","checkSubtype","expected","t","memberType","isValidType","provided","allowedTypes","some","isValidNativeType","kCSSColorTable","clamp_css_byte","Math","round","clamp_css_float","f","parse_css_int","str","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","parseCSSColor","css_str","toLowerCase","iv","substr","op","ep","fname","params","alpha","pop","l","exports","e","Color","r","g","b","a","rgba","toArray","toArray01","toArray01Scaled","scale","toArray01PremultipliedAlpha","toArray01Linear","pow","black","white","transparent","red","blue","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","compare","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","text","image","fontStack","textColor","normalize","Formatted","sections","fromString","unformatted","isEmpty","section","namePrimary","factory","serialize","serialized","ResolvedImage","nameSecondary","available","validateRGBA","validateHSLA","isValue","mixed","item","typeOf","String","Literal","args","context","error","expectedType","evaluate","eachChild","outputDefined","RuntimeError","types","number","boolean","object","Assertion","floor","parsed","ctx","fn","every","arg","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluateSection","evaluatedContent","ImageExpression","inputPrimary","inputSecondary","availableImages","getType","val","Number","Boolean","Coercion","arrayLength","member","parsedMember","registry","c","parseColor","num","isNaN","valueToString","child","geometryTypes","EvaluationContext","scope","globals","feature","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","geometryType","geometry","canonicalID","measureLight","_","brightness","distanceFromCenter","center","y","dX","dY","bX","bearing","bY","dist","cached","getConfig","CompoundExpression","overloadIndex","_evaluate","_overloadIndex","definition","definitions","overloads","availableOverloads","overloadParams","signatureContext","ParsingContext","_scope","parsedArgs","argParseFailed","errors","signatures","stringifySignature","actualTypes","register","signature","CollatorExpression","quickselect","arr","left","right","quickselectStep","defaultCompare","n","m","z","log","exp","sd","sqrt","newLeft","max","newRight","min","j","swap","tmp","calculateSignedArea","ring","sum","len","p1","p2","compareAreas","area","classifyRings","rings","maxRings","polygons","polygon","ccw","abs","updateBBox","bbox","boxWithinBox","bbox1","bbox2","onBoundary","p","x1","y1","x2","y2","rayIntersect","pointWithinPolygon","point","trueOnBoundary","inside","len2","q1","q2","perp","v1","v2","twoSided","x3","y3","det1","det2","segmentIntersectSegment","d","vectorP","vectorQ","EXTENT","mercatorXfromLng","lng","mercatorYfromLat","lat","PI","tan","getTileCoordinates","tilesAtZoom","pointWithinPolygons","lineIntersectPolygon","lineStringWithinPolygon","line","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","shift","resetBBox","getTilePoints","pointBBox","shifts","tilePoints","points","getTileLines","lineBBox","tileLines","tileLine","pointsWithinPolygons","polygonGeometry","tilePolygon","tilePolygons","linesWithinPolygons","Within","geojson","geometries","features","factors","kilometers","miles","nauticalmiles","meters","metres","yards","feet","inches","RE","FE","E2","RAD","CheapRuler","fromTile","units","atan","coslat","cos","w2","w","kx","ky","distance","dx","wrap","dy","atan2","destination","offset","sin","lineDistance","total","along","p0","interpolate","pointToSegmentDistance","pointOnLine","minDist","minX","minY","minI","minT","sqDist","lineSlice","equals","lineSliceAlong","bufferPoint","buffer","v","bufferBBox","insideBBox","deg","Point","prototype","clone","add","_add","sub","_sub","multByPoint","_multByPoint","divByPoint","_divByPoint","mult","_mult","div","_div","rotate","_rotate","rotateAround","_rotateAround","matMult","_matMult","unit","_unit","_perp","_round","mag","other","distSqr","angle","angleTo","angleWith","angleWithSep","convert","TinyQueue","data","_down","_up","top","bottom","peek","pos","current","halfLength","best","compareMax","MIN_POINT_SIZE","MIN_LINE_POINT_SIZE","isDefaultBBOX","defualtBBox","getRangeSize","range","isRangeSafe","threshold","ret","console","warn","splitRange","isLine","size","size1","range1","range2","getBBox","pointSets","getPolygonBBox","bboxToBBoxDistance","ruler","NaN","lngFromMercatorX","latFromMercatorY","getLngLatPoint","getLngLatPoints","coords","pointToLineDistance","nearestPoint","pointsToLineDistance","rangeA","rangeB","subLine","segmentToSegmentDistance","dist1","dist2","lineToLineDistance","line1","line2","pointsToPointsDistance","pointSet1","pointSet2","pointToPolygonDistance","ringLen","lineToPolygonDistance","polygonIntersect","polygon1","polygon2","polygonToPolygonDistance","currentMiniDist","ring1","len1","ring2","updateQueue","distQueue","miniDist","r1","r2","tempDist","pointSetToPolygonDistance","initialDistPair","setThreshold","distPair","newRanges","pointSetsDistance","isLine1","isLine2","set1Threshold","set2Threshold","newRangesA","newRangesB","pointSetToLinesDistance","pointSet","lines","pointSetToPolygonsDistance","polygonsToPolygonsDistance","polygons1","polygons2","pointsToGeometryDistance","originGeometry","lngLatPoints","linesToGeometryDistance","lngLatLines","lngLatLine","polygonsToGeometryDistance","lngLatPolygons","lngLatPolygon","isTypeValid","Distance","isFeatureConstant","test","isStateConstant","isConfigConstant","isGlobalPropertyConstant","Var","boundExpression","part","expr","_parse","annotate","typeAnnotation","Expr","actual","isConstant","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","lastIndex","lowerIndex","upperIndex","currentIndex","currentValue","nextValue","Step","labels","outputs","label","outputType","labelKey","valueKey","stopCount","out","module","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","d2","t0","t1","solve","color","Xn","Yn","Zn","t2","t3","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateLab","interpolateNumber","rgbToHcl","hclToRgb","hclColor","interpolateHue","interpolateHcl","lab","forward","hcl","Interpolate","operator","interpolation","interpolationFactor","lower","upper","exponentialInterpolation","base","controlPoints","ub","rest","outputLower","outputUpper","lowerValue","upperValue","difference","progress","Coalesce","needsAnnotation","argCount","firstImage","Let","binding","At","In","needle","haystack","IndexOf","fromIndex","Match","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","sort","groupedByOutput","outputLookup","outputIndex","coerceLabel","Case","branches","Slice","beginIndex","endIndex","isComparableType","eq","neq","lt","gt","lteq","gteq","eqCollate","neqCollate","ltCollate","gtCollate","lteqCollate","gteqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","rt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","mulberry32","imul","expressions","hsla","colorFunction","coerceValue","clampToAllowedNumber","step","FQIDSeparator","filter","config","values","minValue","maxValue","stepValue","defaultValue","default","originalScope","includes","binarySearch","varargs","hashString","hash","char","charCodeAt","typeToString","zoom","pitch","heatmapDensity","lineProgress","rasterValue","skyRadialProgress","accumulated","LN2","E","LN10","asin","acos","ceil","isSupportedScript","toUpperCase","seed","seedVal","random","success","expressionHasParameter","parameter","parameters","supportsPropertyExpression","spec","supportsLightExpression","supportsZoomExpression","supportsInterpolation","interpolated","identityFunction","createFunction","propertySpec","isColor","zoomAndFeatureDependent","featureDependent","zoomDependent","extend","colorSpace","colorSpaces","innerFun","hashedStops","categoricalKeyType","evaluateExponentialFunction","evaluateIntervalFunction","evaluateCategoricalFunction","create","evaluateIdentityFunction","featureFunctions","zoomStops","featureFunctionStops","interpolationType","bind","coalesce","keyType","evaluated","interp","colorspace","evaluatedLower","apply","evaluatedUpper","StyleExpression","_warningHistory","_evaluator","_defaultValue","getDefaultValue","_enumValues","evaluateWithoutErrorHandling","isExpression","createExpression","parser","getExpectedType","ZoomConstantExpression","isLightConstant","_styleExpression","isStateDependent","isConfigDependent","ZoomDependentExpression","createPropertyExpression","isZoomConstant","canRelaxZoomRestriction","relaxZoomRestriction","zoomCurve","findZoomCurve","StylePropertyFunction","specification","_parameters","_specification","deserialize","normalizePropertyExpression","err","constant","childResult","enum","formatted","resolvedImage","convertLiteral","convertFunction","convertIdentityFunction","tokens","convertTokenString","convertZoomAndPropertyFunction","convertZoomFunction","convertPropertyFunction","getInterpolateOperator","featureFunctionParameters","functionType","getFunctionType","appendStopPair","fixupDegenerateStepCurve","getFallback","isStep","curve","re","exec","literal","unbundle","valueOf","deepUnbundle","unbundledValue","isExpressionFilter","createFilter","layerType","needGeometry","needFeature","convertFilter","filterExp","staticFilter","extractStaticFilter","filterSpec","latest","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","geometryNeeded","dynamicFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","collapsed","collapsedExpression","subExpression","isBranchingDynamically","isRootExpressionDynamic","dynamicConditionExpressions","Set","param","converted","convertComparisonOp","convertNegation","convertDisjunctionOp","convertInOp","convertHasOp","filters","_convertFilter","expectedTypes","children","typechecks","runtimeTypeChecks","conditions","negate","uniformTypes","uniqueValues","migrated","migrateToV8","migrateToExpressions","styleIDs","sourceIDs","compositedSourceLayers","compositeID","deref","refProperties","derefLayers","ref","deepEqual","operations","setStyle","addLayer","removeLayer","setPaintProperty","setLayoutProperty","setSlot","setFilter","addSource","removeSource","setGeoJSONSourceData","setLayerZoomRange","setLayerProperty","setCenter","setZoom","setBearing","setPitch","setSprite","setGlyphs","setTransition","setLight","setTerrain","setFog","setCamera","setLights","setProjection","addImport","removeImport","setImportUrl","setImportData","setImportConfig","sourceId","after","commands","command","sourcesRemoved","updateSource","canUpdateGeoJSON","before","prop","hasOwnProperty","isEqual","diffSources","diffLayerPropertyChanges","layerId","klass","pluckId","indexById","group","diffLayers","beforeOrder","afterOrder","beforeIndex","reduce","afterIndex","tracker","clean","beforeLayer","afterLayer","insertBeforeLayerId","lastIndexOf","slot","minzoom","maxzoom","diffImports","importId","insertBefore","afterImport","beforeImport","beforeData","afterData","diffStyles","sprite","imports","transition","light","fog","projection","lights","camera","removeOrAddSourceCommands","beforeLayers","beforeTerrain","terrain","ValidationError","identifier","__line__","ValidationWarning","validateObject","elementSpecs","valueSpec","elementValidators","objectElementValidators","styleSpec","objectKey","elementSpecKey","elementSpec","validateElement","validateSpec","required","validateImport","defineProperty","importSpec","enumerable","import","validateStyle","validateArray","arraySpec","validateArrayElement","arrayElementValidator","validate","arrayElementSpec","minimum","maximum","function","$version","arrayIndex","validateNumber","specMin","specMax","validateFunction","functionValueSpec","stopKeyType","stopDomainValues","previousStopDomainValue","previousStopDomainZoom","isZoomFunction","isPropertyFunction","isZoomAndPropertyFunction","validateFunctionStops","validateFunctionDefault","validateFunctionStop","nextStopDomainZoom","validateStopDomainValue","reportValue","isFinite","validateExpression","expressionContext","expressionObj","propertyKey","disallowedFilterParameters","disallowedParameters","delete","validateBoolean","validateColor","validateEnum","validateFilter","validateNonExpressionFilter","filter_operator","geometry_type","validateProperty","layerSpec","transitionMatch","tokenMatch","example","validatePaintProperty","validateLayoutProperty","validateLayer","otherLayer","sourceType","lineMetrics","validateString","promoteId","validatePromoteId","validateSource","tiles","source_geojson","cluster","clusterProperties","mapExpr","reduceExpr","source_video","source_image","getSourceTypeValues","memo","isValidUrl","isRelative","validateModel","validateLight","lightSpec","rootType","validateLights","lightType","otherLight","lightPropertySpec","propertiesType","validateTerrain","terrainSpec","validateFog","fogSpec","validateFormatted","validateImage","validateProjection","projectionSpec","VALIDATORS","arrayAsExpression","valid","latestStyleSpec","validateGlyphsURL","_validateStyle","sortErrors","o","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","first_line","table","defaultActions","parseError","recoverable","self","stack","tstack","vstack","lstack","recovering","TERROR","EOF","call","arguments","lexer","sharedState","setInput","yylloc","yyloc","ranges","getPrototypeOf","lex","token","symbol","state","action","yyval","newState","errStr","showPosition","loc","last_line","first_column","last_column","_input","_more","_backtrack","done","matched","conditionStack","ch","unput","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","next","pre","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","topState","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","require","readStyle","Buffer","jsonlint","v8","validateStyleMin","SUPPORTED_SPEC_VERSION","MAX_SOURCES_IN_STYLE","isValid","regex","getSourceCount","getAllowedKeyErrors","allowed","acceptedSourceTypes","getSourceErrors","sourceKeys","sourceUrlPattern","getMaxSourcesErrors","sourcesCount","getSourcesErrors","sourceErrors","getImportErrors","validateImports","getRootErrors","sourcesErrors","specKeys","optionalRootProperties","allowedKeyErrors","glyphUrlPattern","spriteUrlPattern","visibilityPattern","visibility","protected","validateMapboxApiSupported","importsErrors","styleFunction","visit"],"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","x_google_ignoreList":[0,8,24,27,28,29,37,99]}